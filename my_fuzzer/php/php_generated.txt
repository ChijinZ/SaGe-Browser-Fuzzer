<functioncall> = phpdbg_exec(<fuzzstring>)
<functioncall> = phpdbg_break_file(<fuzzstring>, <fuzznumber>)
<functioncall> = phpdbg_break_method(<fuzzstring>, <fuzzstring>)
<functioncall> = phpdbg_break_function(<fuzzstring>)
<functioncall> = phpdbg_color(<fuzznumber>, <fuzzstring>)
<functioncall> = phpdbg_prompt(<fuzzstring>)
<functioncall> = phpdbg_get_executable(<fuzzarray>)
<functioncall> = phpdbg_end_oplog(<fuzzarray>)
<functioncall> = virtual(<fuzzpath>)
<functioncall> = apache_lookup_uri(<fuzzpath>)
<functioncall> = apache_note(<fuzzstring>, <fuzzstring>)
<functioncall> = apache_setenv(<fuzzstring>, <fuzzstring>, <fuzzbool>)
<functioncall> = apache_getenv(<fuzzstring>, <fuzzbool>)
<functioncall> = cli_set_process_title(<fuzzstring>)
<functioncall> = stream_wrapper_register(<fuzzstring>, <fuzzclass>, <fuzznumber>)
<functioncall> = stream_wrapper_unregister(<fuzzstring>)
<functioncall> = stream_wrapper_restore(<fuzzstring>)
<functioncall> = curl_share_init()
<functioncall> = curl_share_close(<fuzzobject>)
<functioncall> = curl_share_setopt(<fuzzobject>, <fuzznumber>, <fuzzmixed>)
<functioncall> = curl_share_errno(<fuzzobject>)
<functioncall> = curl_share_strerror(<fuzznumber>)
<functioncall> = curl_multi_init()
<functioncall> = curl_multi_add_handle(<fuzzobject>, <fuzzobject>)
<functioncall> = curl_multi_remove_handle(<fuzzobject>, <fuzzobject>)
<functioncall> = curl_multi_select(<fuzzobject>)
<functioncall> = curl_multi_select(<fuzzobject>, <fuzznumber>)
<functioncall> = curl_multi_exec(<fuzzobject>, <fuzzmixed>)
<functioncall> = curl_multi_getcontent(<fuzzobject>)
<functioncall> = curl_multi_info_read(<fuzzobject>)
<functioncall> = curl_multi_info_read(<fuzzobject>, <fuzzmixed>)
<functioncall> = curl_multi_close(<fuzzobject>)
<functioncall> = curl_multi_errno(<fuzzobject>)
<functioncall> = curl_multi_strerror(<fuzznumber>)
<functioncall> = curl_multi_setopt(<fuzzobject>, <fuzznumber>, <fuzzmixed>)
<functioncall> = curl_version()
<functioncall> = curl_init()
<functioncall> = curl_init(<fuzzstring>)
<functioncall> = curl_copy_handle(<fuzzobject>)
<functioncall> = curl_setopt(<fuzzobject>, <fuzznumber>, <fuzzmixed>)
<functioncall> = curl_setopt_array(<fuzzobject>, <fuzzarray>)
<functioncall> = curl_exec(<fuzzobject>)
<functioncall> = curl_getinfo(<fuzzobject>)
<functioncall> = curl_getinfo(<fuzzobject>, <fuzznumber>)
<functioncall> = curl_error(<fuzzobject>)
<functioncall> = curl_errno(<fuzzobject>)
<functioncall> = curl_close(<fuzzobject>)
<functioncall> = curl_strerror(<fuzznumber>)
<functioncall> = curl_reset(<fuzzobject>)
<functioncall> = curl_escape(<fuzzobject>, <fuzzstring>)
<functioncall> = curl_unescape(<fuzzobject>, <fuzzstring>)
<functioncall> = curl_pause(<fuzzobject>, <fuzznumber>)
<methodcall> = <obj_DOMAttr>->__construct(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMXPath>->__construct(<fuzzobject>, <fuzzbool>)
<methodcall> = <obj_DOMXPath>->registerNamespace(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMXPath>->registerPhpFunctions()
<methodcall> = <obj_DOMXPath>->registerPhpFunctions(<fuzzstring|array>)
<functioncall> = dom_import_simplexml(<fuzzobject>)
<methodcall> = <obj_DOMNamedNodeMap>->getNamedItem(<fuzzstring>)
<methodcall> = <obj_DOMNamedNodeMap>->item(<fuzznumber>)
<methodcall> = <obj_DOMNamedNodeMap>->getNamedItemNS(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMNodeList>->item(<fuzznumber>)
<methodcall> = <obj_DOMNode>->insertBefore(<fuzzobject>, <fuzzobject>)
<methodcall> = <obj_DOMNode>->replaceChild(<fuzzobject>, <fuzzobject>)
<methodcall> = <obj_DOMNode>->removeChild(<fuzzobject>)
<methodcall> = <obj_DOMNode>->appendChild(<fuzzobject>)
<methodcall> = <obj_DOMNode>->cloneNode(<fuzzbool>)
<methodcall> = <obj_DOMNode>->isSupported(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMNode>->isSameNode(<fuzzobject>)
<methodcall> = <obj_DOMNode>->lookupPrefix(<fuzzstring>)
<methodcall> = <obj_DOMNode>->isDefaultNamespace(<fuzzstring>)
<methodcall> = <obj_DOMNode>->lookupNamespaceURI(<fuzzstring>)
<methodcall> = <obj_DOMDocumentFragment>->appendXML(<fuzzstring>)
<methodcall> = <obj_DOMDocumentFragment>->append()
<methodcall> = <obj_DOMDocumentFragment>->prepend()
<methodcall> = <obj_DOMText>->__construct(<fuzzstring>)
<methodcall> = <obj_DOMText>->splitText(<fuzznumber>)
<methodcall> = <obj_DOMImplementation>->hasFeature(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMImplementation>->createDocumentType(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMImplementation>->createDocumentType(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMImplementation>->createDocument(<fuzzstring>)
<methodcall> = <obj_DOMImplementation>->createDocument(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMImplementation>->createDocument(<fuzzstring>, <fuzzstring>, <fuzzobject>)
<methodcall> = <obj_DOMImplementation>->getFeature(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMProcessingInstruction>->__construct(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMEntityReference>->__construct(<fuzzstring>)
<methodcall> = <obj_DOMElement>->__construct(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMElement>->__construct(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMElement>->getAttribute(<fuzzstring>)
<methodcall> = <obj_DOMElement>->setAttribute(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMElement>->removeAttribute(<fuzzstring>)
<methodcall> = <obj_DOMElement>->getAttributeNode(<fuzzstring>)
<methodcall> = <obj_DOMElement>->setAttributeNode(<fuzzobject>)
<methodcall> = <obj_DOMElement>->removeAttributeNode(<fuzzobject>)
<methodcall> = <obj_DOMElement>->getElementsByTagName(<fuzzstring>)
<methodcall> = <obj_DOMElement>->getAttributeNS(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMElement>->setAttributeNS(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMElement>->removeAttributeNS(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMElement>->getAttributeNodeNS(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMElement>->setAttributeNodeNS(<fuzzobject>)
<methodcall> = <obj_DOMElement>->getElementsByTagNameNS(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMElement>->hasAttribute(<fuzzstring>)
<methodcall> = <obj_DOMElement>->hasAttributeNS(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMElement>->setIdAttribute(<fuzzstring>, <fuzzbool>)
<methodcall> = <obj_DOMElement>->setIdAttributeNS(<fuzzstring>, <fuzzstring>, <fuzzbool>)
<methodcall> = <obj_DOMElement>->setIdAttributeNode(<fuzzobject>, <fuzzbool>)
<methodcall> = <obj_DOMElement>->after()
<methodcall> = <obj_DOMElement>->before()
<methodcall> = <obj_DOMElement>->append()
<methodcall> = <obj_DOMElement>->prepend()
<methodcall> = <obj_DOMElement>->replaceWith()
<methodcall> = <obj_DOMCharacterData>->substringData(<fuzznumber>, <fuzznumber>)
<methodcall> = <obj_DOMCharacterData>->appendData(<fuzzstring>)
<methodcall> = <obj_DOMCharacterData>->insertData(<fuzznumber>, <fuzzstring>)
<methodcall> = <obj_DOMCharacterData>->deleteData(<fuzznumber>, <fuzznumber>)
<methodcall> = <obj_DOMCharacterData>->replaceData(<fuzznumber>, <fuzznumber>, <fuzzstring>)
<methodcall> = <obj_DOMCharacterData>->after()
<methodcall> = <obj_DOMCharacterData>->before()
<methodcall> = <obj_DOMCharacterData>->replaceWith()
<methodcall> = <obj_DOMCdataSection>->__construct(<fuzzstring>)
<methodcall> = <obj_DOMComment>->__construct(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->createElement(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMDocument>->createTextNode(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->createComment(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->createCDATASection(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->createProcessingInstruction(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMDocument>->createAttribute(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->createEntityReference(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->getElementsByTagName(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->importNode(<fuzzobject>, <fuzzbool>)
<methodcall> = <obj_DOMDocument>->createElementNS(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMDocument>->createAttributeNS(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMDocument>->getElementsByTagNameNS(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMDocument>->getElementById(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->adoptNode(<fuzzobject>)
<methodcall> = <obj_DOMDocument>->__construct(<fuzzstring>)
<methodcall> = <obj_DOMDocument>->__construct(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DOMDocument>->save(<fuzzpath>, <fuzznumber>)
<methodcall> = <obj_DOMDocument>->saveXML(<fuzzobject>)
<methodcall> = <obj_DOMDocument>->saveXML(<fuzzobject>, <fuzznumber>)
<methodcall> = <obj_DOMDocument>->xinclude(<fuzznumber>)
<methodcall> = <obj_DOMDocument>->saveHTMLFile(<fuzzpath>)
<methodcall> = <obj_DOMDocument>->registerNodeClass(<fuzzclass>, <fuzzclass>)
<methodcall> = <obj_DOMDocument>->append()
<methodcall> = <obj_DOMDocument>->prepend()
<functioncall> = sem_get(<fuzznumber>, <fuzznumber>)
<functioncall> = sem_get(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = sem_get(<fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = sem_remove(<fuzzobject>)
<functioncall> = finfo_open(<fuzznumber>)
<functioncall> = finfo_open(<fuzznumber>, <fuzzpath>)
<functioncall> = finfo_close(<fuzzresource>)
<functioncall> = finfo_set_flags(<fuzznumber>)
<functioncall> = hrtime()
<functioncall> = hrtime(<fuzzbool>)
<functioncall> = get_browser()
<functioncall> = get_browser(<fuzzstring>)
<functioncall> = get_browser(<fuzzstring>, <fuzzbool>)
<functioncall> = getrusage()
<functioncall> = getrusage(<fuzznumber>)
<functioncall> = chroot(<fuzzpath>)
<functioncall> = chdir(<fuzzpath>)
<functioncall> = getcwd()
<functioncall> = glob(<fuzzpath>)
<functioncall> = glob(<fuzzpath>, <fuzznumber>)
<functioncall> = scandir(<fuzzpath>)
<functioncall> = scandir(<fuzzpath>, <fuzznumber>)
<functioncall> = scandir(<fuzzpath>, <fuzznumber>, <fuzzresource>)
<functioncall> = image_type_to_mime_type(<fuzznumber>)
<functioncall> = image_type_to_extension(<fuzznumber>)
<functioncall> = image_type_to_extension(<fuzznumber>, <fuzzbool>)
<functioncall> = soundex(<fuzzstring>)
<functioncall> = bin2hex(<fuzzstring>)
<functioncall> = hex2bin(<fuzzstring>)
<functioncall> = nl_langinfo(<fuzznumber>)
<functioncall> = strcoll(<fuzzstring>, <fuzzstring>)
<functioncall> = wordwrap(<fuzzstring>)
<functioncall> = wordwrap(<fuzzstring>, <fuzznumber>)
<functioncall> = wordwrap(<fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = wordwrap(<fuzzstring>, <fuzznumber>, <fuzzstring>, <fuzzbool>)
<functioncall> = explode(<fuzzstring>, <fuzzstring>)
<functioncall> = explode(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = implode(<fuzzstring|array>)
<functioncall> = implode(<fuzzstring|array>, <fuzzarray>)
<functioncall> = strtok(<fuzzstring>)
<functioncall> = strtok(<fuzzstring>, <fuzzstring>)
<functioncall> = strtoupper(<fuzzstring>)
<functioncall> = strtolower(<fuzzstring>)
<functioncall> = basename(<fuzzstring>)
<functioncall> = basename(<fuzzstring>, <fuzzstring>)
<functioncall> = dirname(<fuzzstring>)
<functioncall> = dirname(<fuzzstring>, <fuzznumber>)
<functioncall> = pathinfo(<fuzzstring>)
<functioncall> = pathinfo(<fuzzstring>, <fuzznumber>)
<functioncall> = stristr(<fuzzstring>, <fuzzstring>)
<functioncall> = stristr(<fuzzstring>, <fuzzstring>, <fuzzbool>)
<functioncall> = strstr(<fuzzstring>, <fuzzstring>)
<functioncall> = strstr(<fuzzstring>, <fuzzstring>, <fuzzbool>)
<functioncall> = str_contains(<fuzzstring>, <fuzzstring>)
<functioncall> = str_starts_with(<fuzzstring>, <fuzzstring>)
<functioncall> = str_ends_with(<fuzzstring>, <fuzzstring>)
<functioncall> = strpos(<fuzzstring>, <fuzzstring>)
<functioncall> = strpos(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = stripos(<fuzzstring>, <fuzzstring>)
<functioncall> = stripos(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = strrpos(<fuzzstring>, <fuzzstring>)
<functioncall> = strrpos(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = strripos(<fuzzstring>, <fuzzstring>)
<functioncall> = strripos(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = strrchr(<fuzzstring>, <fuzzstring>)
<functioncall> = chunk_split(<fuzzstring>)
<functioncall> = chunk_split(<fuzzstring>, <fuzznumber>)
<functioncall> = chunk_split(<fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = substr(<fuzzstring>, <fuzznumber>)
<functioncall> = substr(<fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = substr_replace(<fuzzstring|array>, <fuzzstring|array>, <fuzzmixed>)
<functioncall> = substr_replace(<fuzzstring|array>, <fuzzstring|array>, <fuzzmixed>, <fuzzmixed>)
<functioncall> = quotemeta(<fuzzstring>)
<functioncall> = ord(<fuzzstring>)
<functioncall> = chr(<fuzznumber>)
<functioncall> = ucfirst(<fuzzstring>)
<functioncall> = lcfirst(<fuzzstring>)
<functioncall> = ucwords(<fuzzstring>)
<functioncall> = ucwords(<fuzzstring>, <fuzzstring>)
<functioncall> = strtr(<fuzzstring>, <fuzzstring|array>)
<functioncall> = strtr(<fuzzstring>, <fuzzstring|array>, <fuzzstring>)
<functioncall> = strrev(<fuzzstring>)
<functioncall> = similar_text(<fuzzstring>, <fuzzstring>)
<functioncall> = similar_text(<fuzzstring>, <fuzzstring>, <fuzzmixed>)
<functioncall> = addcslashes(<fuzzstring>, <fuzzstring>)
<functioncall> = addslashes(<fuzzstring>)
<functioncall> = stripcslashes(<fuzzstring>)
<functioncall> = stripslashes(<fuzzstring>)
<functioncall> = hebrev(<fuzzstring>)
<functioncall> = hebrev(<fuzzstring>, <fuzznumber>)
<functioncall> = nl2br(<fuzzstring>)
<functioncall> = nl2br(<fuzzstring>, <fuzzbool>)
<functioncall> = strip_tags(<fuzzstring>)
<functioncall> = strip_tags(<fuzzstring>, <fuzzmixed>)
<functioncall> = setlocale(<fuzznumber>, <fuzzvariadic>)
<functioncall> = parse_str(<fuzzstring>, <fuzzmixed>)
<functioncall> = str_getcsv(<fuzzstring>)
<functioncall> = str_getcsv(<fuzzstring>, <fuzzstring>)
<functioncall> = str_getcsv(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = str_getcsv(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = str_repeat(<fuzzstring>, <fuzznumber>)
<functioncall> = count_chars(<fuzzstring>)
<functioncall> = count_chars(<fuzzstring>, <fuzznumber>)
<functioncall> = localeconv()
<functioncall> = substr_count(<fuzzstring>, <fuzzstring>)
<functioncall> = substr_count(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = substr_count(<fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = str_pad(<fuzzstring>, <fuzznumber>)
<functioncall> = str_pad(<fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = str_pad(<fuzzstring>, <fuzznumber>, <fuzzstring>, <fuzznumber>)
<functioncall> = sscanf(<fuzzstring>, <fuzzstring>, <fuzzvariadic>)
<functioncall> = str_rot13(<fuzzstring>)
<functioncall> = str_shuffle(<fuzzstring>)
<functioncall> = str_word_count(<fuzzstring>)
<functioncall> = str_word_count(<fuzzstring>, <fuzznumber>)
<functioncall> = str_word_count(<fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = str_split(<fuzzstring>)
<functioncall> = str_split(<fuzzstring>, <fuzznumber>)
<functioncall> = strpbrk(<fuzzstring>, <fuzzstring>)
<functioncall> = substr_compare(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = substr_compare(<fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = substr_compare(<fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzznumber>, <fuzzbool>)
<functioncall> = utf8_encode(<fuzzstring>)
<functioncall> = utf8_decode(<fuzzstring>)
<functioncall> = quoted_printable_decode(<fuzzstring>)
<functioncall> = quoted_printable_encode(<fuzzstring>)
<functioncall> = dns_get_mx(<fuzzstring>, <fuzzref>, <fuzzref>)
<functioncall> = dns_check_record(<fuzzstring>, <fuzzstring>)
<functioncall> = dns_get_record(<fuzzstring>, <fuzznumber>)
<functioncall> = dns_get_record(<fuzzstring>, <fuzznumber>, <fuzzref>)
<functioncall> = dns_get_record(<fuzzstring>, <fuzznumber>, <fuzzref>, <fuzzref>)
<functioncall> = dns_get_record(<fuzzstring>, <fuzznumber>, <fuzzref>, <fuzzref>, <fuzzbool>)
<functioncall> = disk_total_space(<fuzzpath>)
<functioncall> = disk_free_space(<fuzzpath>)
<functioncall> = chmod(<fuzzpath>, <fuzznumber>)
<functioncall> = touch(<fuzzpath>)
<functioncall> = touch(<fuzzpath>, <fuzznumber>)
<functioncall> = touch(<fuzzpath>, <fuzznumber>, <fuzznumber>)
<functioncall> = clearstatcache()
<functioncall> = clearstatcache(<fuzzbool>)
<functioncall> = clearstatcache(<fuzzbool>, <fuzzpath>)
<functioncall> = realpath_cache_size()
<functioncall> = realpath_cache_get()
<functioncall> = krsort(<fuzzarray>)
<functioncall> = krsort(<fuzzarray>, <fuzznumber>)
<functioncall> = ksort(<fuzzarray>)
<functioncall> = ksort(<fuzzarray>, <fuzznumber>)
<functioncall> = count(<fuzzmixed>)
<functioncall> = count(<fuzzmixed>, <fuzznumber>)
<functioncall> = asort(<fuzzarray>)
<functioncall> = asort(<fuzzarray>, <fuzznumber>)
<functioncall> = arsort(<fuzzarray>)
<functioncall> = arsort(<fuzzarray>, <fuzznumber>)
<functioncall> = sort(<fuzzarray>)
<functioncall> = sort(<fuzzarray>, <fuzznumber>)
<functioncall> = rsort(<fuzzarray>)
<functioncall> = rsort(<fuzzarray>, <fuzznumber>)
<functioncall> = end(<fuzzarray|object>)
<functioncall> = prev(<fuzzarray|object>)
<functioncall> = next(<fuzzarray|object>)
<functioncall> = reset(<fuzzarray|object>)
<functioncall> = current(<fuzzarray|object>)
<functioncall> = key(<fuzzarray|object>)
<functioncall> = min(<fuzzvariadic>)
<functioncall> = max(<fuzzvariadic>)
<functioncall> = array_walk(<fuzzarray|object>, <fuzzfunction>)
<functioncall> = array_walk(<fuzzarray|object>, <fuzzfunction>, <fuzzmixed>)
<functioncall> = array_walk_recursive(<fuzzarray|object>, <fuzzfunction>)
<functioncall> = array_walk_recursive(<fuzzarray|object>, <fuzzfunction>, <fuzzmixed>)
<functioncall> = extract(<fuzzarray>)
<functioncall> = extract(<fuzzarray>, <fuzznumber>)
<functioncall> = extract(<fuzzarray>, <fuzznumber>, <fuzzstring>)
<functioncall> = compact(<fuzzvariadic>)
<functioncall> = array_fill(<fuzznumber>, <fuzznumber>, <fuzzmixed>)
<functioncall> = array_fill_keys(<fuzzarray>, <fuzzmixed>)
<functioncall> = range(<fuzzmixed>, <fuzzmixed>)
<functioncall> = range(<fuzzmixed>, <fuzzmixed>, <fuzznumber>)
<functioncall> = shuffle(<fuzzarray>)
<functioncall> = array_push(<fuzzarray>, <fuzzvariadic>)
<functioncall> = array_pop(<fuzzarray>)
<functioncall> = array_shift(<fuzzarray>)
<functioncall> = array_unshift(<fuzzarray>, <fuzzvariadic>)
<functioncall> = array_splice(<fuzzarray>, <fuzznumber>)
<functioncall> = array_splice(<fuzzarray>, <fuzznumber>, <fuzznumber>)
<functioncall> = array_splice(<fuzzarray>, <fuzznumber>, <fuzznumber>, <fuzzmixed>)
<functioncall> = array_slice(<fuzzarray>, <fuzznumber>)
<functioncall> = array_slice(<fuzzarray>, <fuzznumber>, <fuzznumber>)
<functioncall> = array_slice(<fuzzarray>, <fuzznumber>, <fuzznumber>, <fuzzbool>)
<functioncall> = array_keys(<fuzzarray>)
<functioncall> = array_keys(<fuzzarray>, <fuzzmixed>)
<functioncall> = array_keys(<fuzzarray>, <fuzzmixed>, <fuzzbool>)
<functioncall> = array_key_first(<fuzzarray>)
<functioncall> = array_key_last(<fuzzarray>)
<functioncall> = array_values(<fuzzarray>)
<functioncall> = array_count_values(<fuzzarray>)
<functioncall> = array_column(<fuzzarray>, <fuzzstring|number>)
<functioncall> = array_column(<fuzzarray>, <fuzzstring|number>, <fuzzstring|number>)
<functioncall> = array_reverse(<fuzzarray>)
<functioncall> = array_reverse(<fuzzarray>, <fuzzbool>)
<functioncall> = array_pad(<fuzzarray>, <fuzznumber>, <fuzzmixed>)
<functioncall> = array_flip(<fuzzarray>)
<functioncall> = array_change_key_case(<fuzzarray>)
<functioncall> = array_change_key_case(<fuzzarray>, <fuzznumber>)
<functioncall> = array_unique(<fuzzarray>)
<functioncall> = array_unique(<fuzzarray>, <fuzznumber>)
<functioncall> = array_diff(<fuzzvariadic>)
<functioncall> = array_multisort(<fuzzvariadic>)
<functioncall> = array_rand(<fuzzarray>)
<functioncall> = array_rand(<fuzzarray>, <fuzznumber>)
<functioncall> = array_sum(<fuzzarray>)
<functioncall> = array_product(<fuzzarray>)
<functioncall> = array_reduce(<fuzzarray>, <fuzzfunction>)
<functioncall> = array_reduce(<fuzzarray>, <fuzzfunction>, <fuzzmixed>)
<functioncall> = array_filter(<fuzzarray>)
<functioncall> = array_filter(<fuzzarray>, <fuzzfunction>)
<functioncall> = array_filter(<fuzzarray>, <fuzzfunction>, <fuzznumber>)
<functioncall> = array_map(<fuzzfunction>, <fuzzvariadic>)
<functioncall> = array_key_exists(<fuzzmixed>, <fuzzarray>)
<functioncall> = array_chunk(<fuzzarray>, <fuzznumber>)
<functioncall> = array_chunk(<fuzzarray>, <fuzznumber>, <fuzzbool>)
<functioncall> = array_combine(<fuzzarray>, <fuzzarray>)
<functioncall> = proc_terminate(<fuzzresource>)
<functioncall> = proc_terminate(<fuzzresource>, <fuzznumber>)
<functioncall> = proc_close(<fuzzresource>)
<functioncall> = proc_get_status(<fuzzresource>)
<functioncall> = proc_open(<fuzzstring|array>, <fuzzarray>, <fuzzmixed>)
<functioncall> = proc_open(<fuzzstring|array>, <fuzzarray>, <fuzzmixed>, <fuzzstring>)
<functioncall> = proc_open(<fuzzstring|array>, <fuzzarray>, <fuzzmixed>, <fuzzstring>, <fuzzarray>)
<functioncall> = proc_open(<fuzzstring|array>, <fuzzarray>, <fuzzmixed>, <fuzzstring>, <fuzzarray>, <fuzzarray>)
<functioncall> = uniqid()
<functioncall> = uniqid(<fuzzstring>)
<functioncall> = uniqid(<fuzzstring>, <fuzzbool>)
<functioncall> = strptime(<fuzzstring>, <fuzzstring>)
<functioncall> = stream_socket_pair(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = stream_socket_client(<fuzzstring>)
<functioncall> = stream_socket_client(<fuzzstring>, <fuzzmixed>)
<functioncall> = stream_socket_client(<fuzzstring>, <fuzzmixed>, <fuzzmixed>)
<functioncall> = stream_socket_client(<fuzzstring>, <fuzzmixed>, <fuzzmixed>, <fuzznumber>)
<functioncall> = stream_socket_client(<fuzzstring>, <fuzzmixed>, <fuzzmixed>, <fuzznumber>, <fuzznumber>)
<functioncall> = stream_socket_client(<fuzzstring>, <fuzzmixed>, <fuzzmixed>, <fuzznumber>, <fuzznumber>, <fuzzresource>)
<functioncall> = stream_socket_server(<fuzzstring>)
<functioncall> = stream_socket_server(<fuzzstring>, <fuzzmixed>)
<functioncall> = stream_socket_server(<fuzzstring>, <fuzzmixed>, <fuzzmixed>)
<functioncall> = stream_socket_server(<fuzzstring>, <fuzzmixed>, <fuzzmixed>, <fuzznumber>)
<functioncall> = stream_socket_server(<fuzzstring>, <fuzzmixed>, <fuzzmixed>, <fuzznumber>, <fuzzresource>)
<functioncall> = stream_socket_accept(<fuzzresource>)
<functioncall> = stream_socket_accept(<fuzzresource>, <fuzznumber>)
<functioncall> = stream_socket_accept(<fuzzresource>, <fuzznumber>, <fuzzmixed>)
<functioncall> = stream_socket_get_name(<fuzzresource>, <fuzzbool>)
<functioncall> = stream_socket_sendto(<fuzzresource>, <fuzzstring>)
<functioncall> = stream_socket_sendto(<fuzzresource>, <fuzzstring>, <fuzznumber>)
<functioncall> = stream_socket_sendto(<fuzzresource>, <fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = stream_socket_recvfrom(<fuzzresource>, <fuzznumber>)
<functioncall> = stream_socket_recvfrom(<fuzzresource>, <fuzznumber>, <fuzznumber>)
<functioncall> = stream_socket_recvfrom(<fuzzresource>, <fuzznumber>, <fuzznumber>, <fuzzmixed>)
<functioncall> = stream_get_contents(<fuzzresource>)
<functioncall> = stream_get_contents(<fuzzresource>, <fuzznumber>)
<functioncall> = stream_get_contents(<fuzzresource>, <fuzznumber>, <fuzznumber>)
<functioncall> = stream_copy_to_stream(<fuzzresource>, <fuzzresource>)
<functioncall> = stream_copy_to_stream(<fuzzresource>, <fuzzresource>, <fuzznumber>)
<functioncall> = stream_copy_to_stream(<fuzzresource>, <fuzzresource>, <fuzznumber>, <fuzznumber>)
<functioncall> = stream_get_meta_data(<fuzzresource>)
<functioncall> = stream_get_transports()
<functioncall> = stream_get_wrappers()
<functioncall> = stream_select(<fuzzarray>, <fuzzarray>, <fuzzarray>, <fuzznumber>)
<functioncall> = stream_select(<fuzzarray>, <fuzzarray>, <fuzzarray>, <fuzznumber>, <fuzznumber>)
<functioncall> = stream_context_get_options(<fuzzresource>)
<functioncall> = stream_context_set_option(<fuzzresource>, <fuzzarray>)
<functioncall> = stream_context_set_option(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzmixed>)
<functioncall> = stream_context_set_params(<fuzzresource>, <fuzzarray>)
<functioncall> = stream_context_get_params(<fuzzresource>)
<functioncall> = stream_context_get_default()
<functioncall> = stream_context_get_default(<fuzzarray>)
<functioncall> = stream_context_set_default(<fuzzarray>)
<functioncall> = stream_context_create()
<functioncall> = stream_context_create(<fuzzarray>)
<functioncall> = stream_context_create(<fuzzarray>, <fuzzarray>)
<functioncall> = stream_filter_remove(<fuzzresource>)
<functioncall> = stream_get_line(<fuzzresource>, <fuzznumber>)
<functioncall> = stream_get_line(<fuzzresource>, <fuzznumber>, <fuzzstring>)
<functioncall> = stream_set_blocking(<fuzzresource>, <fuzzbool>)
<functioncall> = stream_set_timeout(<fuzzresource>, <fuzznumber>)
<functioncall> = stream_set_timeout(<fuzzresource>, <fuzznumber>, <fuzznumber>)
<functioncall> = stream_set_write_buffer(<fuzzresource>, <fuzznumber>)
<functioncall> = stream_set_chunk_size(<fuzzresource>, <fuzznumber>)
<functioncall> = stream_set_read_buffer(<fuzzresource>, <fuzznumber>)
<functioncall> = stream_socket_enable_crypto(<fuzzresource>, <fuzzbool>)
<functioncall> = stream_socket_enable_crypto(<fuzzresource>, <fuzzbool>, <fuzznumber>)
<functioncall> = stream_socket_enable_crypto(<fuzzresource>, <fuzzbool>, <fuzznumber>, <fuzzresource>)
<functioncall> = stream_resolve_include_path(<fuzzpath>)
<functioncall> = stream_is_local(<fuzzmixed>)
<functioncall> = stream_supports_lock(<fuzzresource>)
<functioncall> = stream_isatty(<fuzzresource>)
<functioncall> = sapi_windows_vt100_support(<fuzzresource>)
<functioncall> = sapi_windows_vt100_support(<fuzzresource>, <fuzzbool>)
<functioncall> = stream_socket_shutdown(<fuzzresource>, <fuzznumber>)
<functioncall> = sprintf(<fuzzstring>, <fuzzvariadic>)
<functioncall> = vsprintf(<fuzzstring>, <fuzzarray>)
<functioncall> = printf(<fuzzstring>, <fuzzvariadic>)
<functioncall> = vprintf(<fuzzstring>, <fuzzarray>)
<functioncall> = fprintf(<fuzzresource>, <fuzzstring>, <fuzzvariadic>)
<functioncall> = vfprintf(<fuzzresource>, <fuzzstring>, <fuzzarray>)
<methodcall> = <obj_php_user_filter>->filter(<fuzzresource>, <fuzzresource>, <fuzzref>, <fuzzbool>)
<functioncall> = onCreate()
<functioncall> = onClose()
<functioncall> = stream_bucket_make_writeable(<fuzzresource>)
<functioncall> = stream_bucket_new(<fuzzmixed>, <fuzzstring>)
<functioncall> = stream_get_filters()
<functioncall> = stream_filter_register(<fuzzstring>, <fuzzstring>)
<functioncall> = http_build_query(<fuzzarray|object>)
<functioncall> = http_build_query(<fuzzarray|object>, <fuzzstring>)
<functioncall> = http_build_query(<fuzzarray|object>, <fuzzstring>, <fuzzstring>)
<functioncall> = http_build_query(<fuzzarray|object>, <fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = escapeshellcmd(<fuzzstring>)
<functioncall> = escapeshellarg(<fuzzstring>)
<functioncall> = shell_exec(<fuzzstring>)
<functioncall> = proc_nice(<fuzznumber>)
<functioncall> = header(<fuzzstring>)
<functioncall> = header(<fuzzstring>, <fuzzbool>)
<functioncall> = header(<fuzzstring>, <fuzzbool>, <fuzznumber>)
<functioncall> = header_remove()
<functioncall> = header_remove(<fuzzstring>)
<functioncall> = setcookie(<fuzzstring>)
<functioncall> = setcookie(<fuzzstring>, <fuzzstring>)
<functioncall> = setcookie(<fuzzstring>, <fuzzstring>, <fuzzmixed>)
<functioncall> = setcookie(<fuzzstring>, <fuzzstring>, <fuzzmixed>, <fuzzstring>)
<functioncall> = setcookie(<fuzzstring>, <fuzzstring>, <fuzzmixed>, <fuzzstring>, <fuzzstring>)
<functioncall> = setcookie(<fuzzstring>, <fuzzstring>, <fuzzmixed>, <fuzzstring>, <fuzzstring>, <fuzzbool>)
<functioncall> = setcookie(<fuzzstring>, <fuzzstring>, <fuzzmixed>, <fuzzstring>, <fuzzstring>, <fuzzbool>, <fuzzbool>)
<functioncall> = setrawcookie(<fuzzstring>)
<functioncall> = setrawcookie(<fuzzstring>, <fuzzstring>)
<functioncall> = setrawcookie(<fuzzstring>, <fuzzstring>, <fuzzmixed>)
<functioncall> = setrawcookie(<fuzzstring>, <fuzzstring>, <fuzzmixed>, <fuzzstring>)
<functioncall> = setrawcookie(<fuzzstring>, <fuzzstring>, <fuzzmixed>, <fuzzstring>, <fuzzstring>)
<functioncall> = setrawcookie(<fuzzstring>, <fuzzstring>, <fuzzmixed>, <fuzzstring>, <fuzzstring>, <fuzzbool>)
<functioncall> = setrawcookie(<fuzzstring>, <fuzzstring>, <fuzzmixed>, <fuzzstring>, <fuzzstring>, <fuzzbool>, <fuzzbool>)
<functioncall> = headers_sent()
<functioncall> = headers_sent(<fuzzmixed>)
<functioncall> = headers_sent(<fuzzmixed>, <fuzzmixed>)
<functioncall> = headers_list()
<functioncall> = http_response_code()
<functioncall> = http_response_code(<fuzznumber>)
<functioncall> = constant(<fuzzstring>)
<functioncall> = inet_ntop(<fuzzstring>)
<functioncall> = inet_pton(<fuzzstring>)
<functioncall> = ip2long(<fuzzstring>)
<functioncall> = long2ip(<fuzznumber>)
<functioncall> = getenv()
<functioncall> = getenv(<fuzzstring>)
<functioncall> = getenv(<fuzzstring>, <fuzzbool>)
<functioncall> = putenv(<fuzzstring>)
<functioncall> = getopt(<fuzzstring>)
<functioncall> = getopt(<fuzzstring>, <fuzzarray>)
<functioncall> = getopt(<fuzzstring>, <fuzzarray>, <fuzzmixed>)
<functioncall> = flush()
<functioncall> = sleep(<fuzznumber>)
<functioncall> = usleep(<fuzznumber>)
<functioncall> = time_nanosleep(<fuzznumber>, <fuzznumber>)
<functioncall> = time_sleep_until(<fuzznumber>)
<functioncall> = get_current_user()
<functioncall> = get_cfg_var(<fuzzstring>)
<functioncall> = error_log(<fuzzstring>)
<functioncall> = error_log(<fuzzstring>, <fuzznumber>)
<functioncall> = error_log(<fuzzstring>, <fuzznumber>, <fuzzpath>)
<functioncall> = error_log(<fuzzstring>, <fuzznumber>, <fuzzpath>, <fuzzstring>)
<functioncall> = error_get_last()
<functioncall> = error_clear_last()
<functioncall> = call_user_func(<fuzzfunction>, <fuzzvariadic>)
<functioncall> = call_user_func_array(<fuzzfunction>, <fuzzarray>)
<functioncall> = forward_static_call(<fuzzfunction>, <fuzzvariadic>)
<functioncall> = forward_static_call_array(<fuzzfunction>, <fuzzarray>)
<functioncall> = highlight_file(<fuzzpath>)
<functioncall> = highlight_file(<fuzzpath>, <fuzzbool>)
<functioncall> = php_strip_whitespace(<fuzzpath>)
<functioncall> = highlight_string(<fuzzmixed>)
<functioncall> = highlight_string(<fuzzmixed>, <fuzzbool>)
<functioncall> = ini_get(<fuzzstring>)
<functioncall> = ini_get_all()
<functioncall> = ini_get_all(<fuzzstring>)
<functioncall> = ini_get_all(<fuzzstring>, <fuzzbool>)
<functioncall> = ini_set(<fuzzstring>, <fuzzstring>)
<functioncall> = ini_restore(<fuzzstring>)
<functioncall> = set_include_path(<fuzzpath>)
<functioncall> = get_include_path()
<functioncall> = print_r(<fuzzmixed>)
<functioncall> = print_r(<fuzzmixed>, <fuzzbool>)
<functioncall> = connection_aborted()
<functioncall> = connection_status()
<functioncall> = ignore_user_abort()
<functioncall> = ignore_user_abort(<fuzzbool>)
<functioncall> = getservbyname(<fuzzstring>, <fuzzstring>)
<functioncall> = getservbyport(<fuzznumber>, <fuzzstring>)
<functioncall> = getprotobyname(<fuzzstring>)
<functioncall> = getprotobynumber(<fuzznumber>)
<functioncall> = unregister_tick_function(<fuzzfunction>)
<functioncall> = is_uploaded_file(<fuzzpath>)
<functioncall> = move_uploaded_file(<fuzzstring>, <fuzzpath>)
<functioncall> = parse_ini_file(<fuzzpath>)
<functioncall> = parse_ini_file(<fuzzpath>, <fuzzbool>)
<functioncall> = parse_ini_file(<fuzzpath>, <fuzzbool>, <fuzznumber>)
<functioncall> = parse_ini_string(<fuzzstring>)
<functioncall> = parse_ini_string(<fuzzstring>, <fuzzbool>)
<functioncall> = parse_ini_string(<fuzzstring>, <fuzzbool>, <fuzznumber>)
<functioncall> = config_get_hash()
<functioncall> = sys_getloadavg()
<functioncall> = pack(<fuzzstring>, <fuzzvariadic>)
<functioncall> = unpack(<fuzzstring>, <fuzzstring>)
<functioncall> = unpack(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = mail(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = mail(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring|array>)
<functioncall> = mail(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring|array>, <fuzzstring>)
<functioncall> = crc32(<fuzzstring>)
<functioncall> = md5(<fuzzstring>)
<functioncall> = md5(<fuzzstring>, <fuzzbool>)
<functioncall> = md5_file(<fuzzpath>)
<functioncall> = md5_file(<fuzzpath>, <fuzzbool>)
<functioncall> = dl(<fuzzstring>)
<functioncall> = htmlspecialchars_decode(<fuzzstring>)
<functioncall> = htmlspecialchars_decode(<fuzzstring>, <fuzznumber>)
<functioncall> = html_entity_decode(<fuzzstring>)
<functioncall> = html_entity_decode(<fuzzstring>, <fuzznumber>)
<functioncall> = html_entity_decode(<fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = get_html_translation_table()
<functioncall> = get_html_translation_table(<fuzznumber>)
<functioncall> = get_html_translation_table(<fuzznumber>, <fuzznumber>)
<functioncall> = get_html_translation_table(<fuzznumber>, <fuzznumber>, <fuzzstring>)
<functioncall> = crypt(<fuzzstring>)
<functioncall> = crypt(<fuzzstring>, <fuzzstring>)
<functioncall> = gettype(<fuzzmixed>)
<functioncall> = get_debug_type(<fuzzmixed>)
<functioncall> = settype(<fuzzmixed>, <fuzzstring>)
<functioncall> = intval(<fuzzmixed>)
<functioncall> = intval(<fuzzmixed>, <fuzznumber>)
<functioncall> = floatval(<fuzzmixed>)
<functioncall> = boolval(<fuzzmixed>)
<functioncall> = strval(<fuzzmixed>)
<functioncall> = is_bool(<fuzzmixed>)
<functioncall> = is_numeric(<fuzzmixed>)
<functioncall> = is_scalar(<fuzzmixed>)
<functioncall> = is_callable(<fuzzmixed>)
<functioncall> = is_callable(<fuzzmixed>, <fuzzbool>)
<functioncall> = is_callable(<fuzzmixed>, <fuzzbool>, <fuzzmixed>)
<functioncall> = is_iterable(<fuzzmixed>)
<functioncall> = is_countable(<fuzzmixed>)
<functioncall> = net_get_interfaces()
<functioncall> = net_get_interfaces()
<functioncall> = sha1(<fuzzstring>)
<functioncall> = sha1(<fuzzstring>, <fuzzbool>)
<functioncall> = sha1_file(<fuzzpath>)
<functioncall> = sha1_file(<fuzzpath>, <fuzzbool>)
<functioncall> = levenshtein(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = levenshtein(<fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = levenshtein(<fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = abs(<fuzznumber>)
<functioncall> = ceil(<fuzznumber>)
<functioncall> = floor(<fuzznumber>)
<functioncall> = round(<fuzznumber>)
<functioncall> = round(<fuzznumber>, <fuzznumber>)
<functioncall> = round(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = sin(<fuzznumber>)
<functioncall> = cos(<fuzznumber>)
<functioncall> = tan(<fuzznumber>)
<functioncall> = asin(<fuzznumber>)
<functioncall> = acos(<fuzznumber>)
<functioncall> = atan(<fuzznumber>)
<functioncall> = atan2(<fuzznumber>, <fuzznumber>)
<functioncall> = sinh(<fuzznumber>)
<functioncall> = cosh(<fuzznumber>)
<functioncall> = tanh(<fuzznumber>)
<functioncall> = asinh(<fuzznumber>)
<functioncall> = acosh(<fuzznumber>)
<functioncall> = atanh(<fuzznumber>)
<functioncall> = pi()
<functioncall> = is_finite(<fuzznumber>)
<functioncall> = is_infinite(<fuzznumber>)
<functioncall> = is_nan(<fuzznumber>)
<functioncall> = pow(<fuzzmixed>, <fuzzmixed>)
<functioncall> = exp(<fuzznumber>)
<functioncall> = expm1(<fuzznumber>)
<functioncall> = log1p(<fuzznumber>)
<functioncall> = log(<fuzznumber>)
<functioncall> = log(<fuzznumber>, <fuzznumber>)
<functioncall> = log10(<fuzznumber>)
<functioncall> = sqrt(<fuzznumber>)
<functioncall> = hypot(<fuzznumber>, <fuzznumber>)
<functioncall> = deg2rad(<fuzznumber>)
<functioncall> = rad2deg(<fuzznumber>)
<functioncall> = bindec(<fuzzstring>)
<functioncall> = hexdec(<fuzzstring>)
<functioncall> = octdec(<fuzzstring>)
<functioncall> = decbin(<fuzznumber>)
<functioncall> = decoct(<fuzznumber>)
<functioncall> = dechex(<fuzznumber>)
<functioncall> = base_convert(<fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = number_format(<fuzznumber>)
<functioncall> = number_format(<fuzznumber>, <fuzznumber>)
<functioncall> = number_format(<fuzznumber>, <fuzznumber>, <fuzzstring>)
<functioncall> = number_format(<fuzznumber>, <fuzznumber>, <fuzzstring>, <fuzzstring>)
<functioncall> = fmod(<fuzznumber>, <fuzznumber>)
<functioncall> = fdiv(<fuzznumber>, <fuzznumber>)
<functioncall> = intdiv(<fuzznumber>, <fuzznumber>)
<functioncall> = password_get_info(<fuzzstring>)
<functioncall> = password_needs_rehash(<fuzzstring>, <fuzzmixed>)
<functioncall> = password_needs_rehash(<fuzzstring>, <fuzzmixed>, <fuzzarray>)
<functioncall> = password_verify(<fuzzstring>, <fuzzstring>)
<functioncall> = password_hash(<fuzzstring>, <fuzzmixed>)
<functioncall> = password_hash(<fuzzstring>, <fuzzmixed>, <fuzzarray>)
<functioncall> = password_algos()
<functioncall> = assert(<fuzzmixed>)
<functioncall> = assert(<fuzzmixed>, <fuzzstring|obj>)
<functioncall> = assert_options(<fuzznumber>)
<functioncall> = assert_options(<fuzznumber>, <fuzzmixed>)
<functioncall> = gethostname()
<functioncall> = gethostbyaddr(<fuzzstring>)
<functioncall> = gethostbyname(<fuzzstring>)
<functioncall> = gethostbynamel(<fuzzstring>)
<functioncall> = dns_check_record(<fuzzstring>)
<functioncall> = dns_check_record(<fuzzstring>, <fuzzstring>)
<functioncall> = dns_get_record(<fuzzstring>)
<functioncall> = dns_get_record(<fuzzstring>, <fuzznumber>)
<functioncall> = dns_get_record(<fuzzstring>, <fuzznumber>, <fuzzmixed>)
<functioncall> = dns_get_record(<fuzzstring>, <fuzznumber>, <fuzzmixed>, <fuzzmixed>)
<functioncall> = dns_get_record(<fuzzstring>, <fuzznumber>, <fuzzmixed>, <fuzzmixed>, <fuzzbool>)
<functioncall> = dns_get_mx(<fuzzstring>, <fuzzmixed>)
<functioncall> = dns_get_mx(<fuzzstring>, <fuzzmixed>, <fuzzmixed>)
<functioncall> = mt_srand()
<functioncall> = mt_srand(<fuzznumber>)
<functioncall> = mt_srand(<fuzznumber>, <fuzznumber>)
<functioncall> = mt_rand(<fuzznumber>, <fuzznumber>)
<functioncall> = mt_getrandmax()
<functioncall> = flock(<fuzzresource>, <fuzznumber>)
<functioncall> = flock(<fuzzresource>, <fuzznumber>, <fuzzmixed>)
<functioncall> = get_meta_tags(<fuzzpath>)
<functioncall> = get_meta_tags(<fuzzpath>, <fuzzbool>)
<functioncall> = file_get_contents(<fuzzpath>)
<functioncall> = file_get_contents(<fuzzpath>, <fuzzbool>)
<functioncall> = file_get_contents(<fuzzpath>, <fuzzbool>, <fuzzresource>)
<functioncall> = file_get_contents(<fuzzpath>, <fuzzbool>, <fuzzresource>, <fuzznumber>)
<functioncall> = file_get_contents(<fuzzpath>, <fuzzbool>, <fuzzresource>, <fuzznumber>, <fuzznumber>)
<functioncall> = file_put_contents(<fuzzpath>, <fuzzmixed>)
<functioncall> = file_put_contents(<fuzzpath>, <fuzzmixed>, <fuzznumber>)
<functioncall> = file_put_contents(<fuzzpath>, <fuzzmixed>, <fuzznumber>, <fuzzresource>)
<functioncall> = file(<fuzzpath>)
<functioncall> = file(<fuzzpath>, <fuzznumber>)
<functioncall> = file(<fuzzpath>, <fuzznumber>, <fuzzresource>)
<functioncall> = tempnam(<fuzzpath>, <fuzzpath>)
<functioncall> = tmpfile()
<functioncall> = fopen(<fuzzpath>, <fuzzstring>)
<functioncall> = fopen(<fuzzpath>, <fuzzstring>, <fuzzbool>)
<functioncall> = fopen(<fuzzpath>, <fuzzstring>, <fuzzbool>, <fuzzresource>)
<functioncall> = fclose(<fuzzresource>)
<functioncall> = popen(<fuzzpath>, <fuzzstring>)
<functioncall> = pclose(<fuzzresource>)
<functioncall> = feof(<fuzzresource>)
<functioncall> = fgets(<fuzzresource>)
<functioncall> = fgets(<fuzzresource>, <fuzznumber>)
<functioncall> = fgetc(<fuzzresource>)
<functioncall> = fscanf(<fuzzresource>, <fuzzstring>, <fuzzvariadic>)
<functioncall> = fwrite(<fuzzresource>, <fuzzstring>)
<functioncall> = fwrite(<fuzzresource>, <fuzzstring>, <fuzznumber>)
<functioncall> = fflush(<fuzzresource>)
<functioncall> = rewind(<fuzzresource>)
<functioncall> = ftell(<fuzzresource>)
<functioncall> = fseek(<fuzzresource>, <fuzznumber>)
<functioncall> = fseek(<fuzzresource>, <fuzznumber>, <fuzznumber>)
<functioncall> = mkdir(<fuzzpath>)
<functioncall> = mkdir(<fuzzpath>, <fuzznumber>)
<functioncall> = mkdir(<fuzzpath>, <fuzznumber>, <fuzzbool>)
<functioncall> = mkdir(<fuzzpath>, <fuzznumber>, <fuzzbool>, <fuzzresource>)
<functioncall> = rmdir(<fuzzpath>)
<functioncall> = rmdir(<fuzzpath>, <fuzzresource>)
<functioncall> = readfile(<fuzzpath>)
<functioncall> = readfile(<fuzzpath>, <fuzzbool>)
<functioncall> = readfile(<fuzzpath>, <fuzzbool>, <fuzzresource>)
<functioncall> = umask()
<functioncall> = umask(<fuzznumber>)
<functioncall> = fpassthru(<fuzzresource>)
<functioncall> = rename(<fuzzpath>, <fuzzpath>)
<functioncall> = rename(<fuzzpath>, <fuzzpath>, <fuzzresource>)
<functioncall> = unlink(<fuzzpath>)
<functioncall> = unlink(<fuzzpath>, <fuzzresource>)
<functioncall> = ftruncate(<fuzzresource>, <fuzznumber>)
<functioncall> = fstat(<fuzzresource>)
<functioncall> = copy(<fuzzpath>, <fuzzpath>)
<functioncall> = copy(<fuzzpath>, <fuzzpath>, <fuzzresource>)
<functioncall> = fread(<fuzzresource>, <fuzznumber>)
<functioncall> = fputcsv(<fuzzresource>, <fuzzarray>)
<functioncall> = fputcsv(<fuzzresource>, <fuzzarray>, <fuzzstring>)
<functioncall> = fputcsv(<fuzzresource>, <fuzzarray>, <fuzzstring>, <fuzzstring>)
<functioncall> = fputcsv(<fuzzresource>, <fuzzarray>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = fgetcsv(<fuzzresource>)
<functioncall> = fgetcsv(<fuzzresource>, <fuzznumber>)
<functioncall> = fgetcsv(<fuzzresource>, <fuzznumber>, <fuzzstring>)
<functioncall> = fgetcsv(<fuzzresource>, <fuzznumber>, <fuzzstring>, <fuzzstring>)
<functioncall> = fgetcsv(<fuzzresource>, <fuzznumber>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = realpath(<fuzzpath>)
<functioncall> = fnmatch(<fuzzpath>, <fuzzpath>)
<functioncall> = fnmatch(<fuzzpath>, <fuzzpath>, <fuzznumber>)
<functioncall> = sys_get_temp_dir()
<functioncall> = var_dump(<fuzzvariadic>)
<functioncall> = debug_zval_dump(<fuzzvariadic>)
<functioncall> = var_export(<fuzzmixed>)
<functioncall> = var_export(<fuzzmixed>, <fuzzbool>)
<functioncall> = serialize(<fuzzmixed>)
<functioncall> = unserialize(<fuzzstring>)
<functioncall> = unserialize(<fuzzstring>, <fuzzarray>)
<functioncall> = memory_get_usage()
<functioncall> = memory_get_usage(<fuzzbool>)
<functioncall> = memory_get_peak_usage()
<functioncall> = memory_get_peak_usage(<fuzzbool>)
<functioncall> = convert_uuencode(<fuzzstring>)
<functioncall> = convert_uudecode(<fuzzstring>)
<functioncall> = openlog(<fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = closelog()
<functioncall> = syslog(<fuzznumber>, <fuzzstring>)
<functioncall> = readlink(<fuzzpath>)
<functioncall> = linkinfo(<fuzzpath>)
<functioncall> = symlink(<fuzzpath>, <fuzzpath>)
<functioncall> = link(<fuzzpath>, <fuzzpath>)
<functioncall> = parse_url(<fuzzstring>)
<functioncall> = parse_url(<fuzzstring>, <fuzznumber>)
<functioncall> = urlencode(<fuzzstring>)
<functioncall> = urldecode(<fuzzstring>)
<functioncall> = rawurlencode(<fuzzstring>)
<functioncall> = rawurldecode(<fuzzstring>)
<functioncall> = get_headers(<fuzzpath>)
<functioncall> = get_headers(<fuzzpath>, <fuzznumber>)
<functioncall> = get_headers(<fuzzpath>, <fuzznumber>, <fuzzresource>)
<functioncall> = ftok(<fuzzpath>, <fuzzstring>)
<functioncall> = iptcembed(<fuzzstring>, <fuzzpath>)
<functioncall> = iptcembed(<fuzzstring>, <fuzzpath>, <fuzznumber>)
<functioncall> = iptcparse(<fuzzstring>)
<functioncall> = getmyuid()
<functioncall> = getmygid()
<functioncall> = getmypid()
<functioncall> = getmyinode()
<functioncall> = getlastmod()
<functioncall> = rand(<fuzznumber>, <fuzznumber>)
<functioncall> = version_compare(<fuzzstring>, <fuzzstring>)
<functioncall> = version_compare(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = base64_encode(<fuzzstring>)
<functioncall> = base64_decode(<fuzzstring>)
<functioncall> = base64_decode(<fuzzstring>, <fuzzbool>)
<functioncall> = random_bytes(<fuzznumber>)
<functioncall> = random_int(<fuzznumber>, <fuzznumber>)
<functioncall> = phpinfo()
<functioncall> = phpinfo(<fuzznumber>)
<functioncall> = phpversion()
<functioncall> = phpversion(<fuzzstring>)
<functioncall> = phpcredits()
<functioncall> = phpcredits(<fuzznumber>)
<functioncall> = php_sapi_name()
<functioncall> = php_uname()
<functioncall> = php_uname(<fuzzstring>)
<functioncall> = php_ini_scanned_files()
<functioncall> = php_ini_loaded_file()
<functioncall> = metaphone(<fuzzstring>)
<functioncall> = metaphone(<fuzzstring>, <fuzznumber>)
<functioncall> = lcg_value()
<functioncall> = readline(<fuzzstring>)
<functioncall> = readline_info(<fuzzstring>)
<functioncall> = readline_info(<fuzzstring>, <fuzzref>)
<functioncall> = readline_add_history(<fuzzstring>)
<functioncall> = readline_read_history(<fuzzpath>)
<functioncall> = readline_write_history(<fuzzpath>)
<functioncall> = readline_completion_function(<fuzzfunction>)
<functioncall> = readline_callback_handler_install(<fuzzstring>, <fuzzfunction>)
<methodcall> = <obj_SQLite3>->open(<fuzzpath>, <fuzznumber>)
<methodcall> = <obj_SQLite3>->open(<fuzzpath>, <fuzznumber>, <fuzzstring>)
<methodcall> = <obj_SQLite3>->exec(<fuzzstring>)
<methodcall> = <obj_SQLite3>->enableExtendedResultCodes(<fuzzbool>)
<methodcall> = <obj_SQLite3>->busyTimeout(<fuzznumber>)
<methodcall> = <obj_SQLite3>->loadExtension(<fuzzstring>)
<methodcall> = <obj_SQLite3>->escapeString(<fuzzstring>)
<methodcall> = <obj_SQLite3>->prepare(<fuzzstring>)
<methodcall> = <obj_SQLite3>->query(<fuzzstring>)
<methodcall> = <obj_SQLite3>->querySingle(<fuzzstring>, <fuzzbool>)
<methodcall> = <obj_SQLite3>->createFunction(<fuzzstring>, <fuzzfunction>, <fuzznumber>)
<methodcall> = <obj_SQLite3>->createFunction(<fuzzstring>, <fuzzfunction>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_SQLite3>->createAggregate(<fuzzstring>, <fuzzfunction>, <fuzzfunction>, <fuzznumber>)
<methodcall> = <obj_SQLite3>->createCollation(<fuzzstring>, <fuzzfunction>)
<methodcall> = <obj_SQLite3>->openBlob(<fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzzstring>)
<methodcall> = <obj_SQLite3>->openBlob(<fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzzstring>, <fuzznumber>)
<methodcall> = <obj_SQLite3>->enableExceptions(<fuzzbool>)
<methodcall> = <obj_SQLite3>->setAuthorizer(<fuzzfunction>)
<methodcall> = <obj_SQLite3>->backup(<fuzzobject>, <fuzzstring>)
<methodcall> = <obj_SQLite3>->backup(<fuzzobject>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SQLite3Stmt>->getSQL(<fuzzbool>)
<methodcall> = <obj_SQLite3Stmt>->__construct(<fuzzobject>, <fuzzstring>)
<methodcall> = <obj_SQLite3Result>->columnName(<fuzznumber>)
<methodcall> = <obj_SQLite3Result>->columnType(<fuzznumber>)
<methodcall> = <obj_SQLite3Result>->fetchArray(<fuzznumber>)
<functioncall> = odbc_prepare(<fuzzresource>, <fuzzstring>)
<functioncall> = odbc_execute(<fuzzresource>, <fuzzarray>)
<functioncall> = odbc_cursor(<fuzzresource>)
<functioncall> = odbc_data_source(<fuzzresource>, <fuzznumber>)
<functioncall> = odbc_exec(<fuzzresource>, <fuzzstring>, <fuzznumber>)
<functioncall> = odbc_fetch_into(<fuzzresource>, <fuzzref>, <fuzznumber>)
<functioncall> = solid_fetch_prev(<fuzzresource>)
<functioncall> = odbc_fetch_row(<fuzzresource>, <fuzznumber>)
<functioncall> = odbc_result(<fuzzresource>, <fuzzref>)
<functioncall> = odbc_result_all(<fuzzresource>, <fuzzstring>)
<functioncall> = odbc_free_result(<fuzzresource>)
<functioncall> = odbc_close(<fuzzresource>)
<functioncall> = odbc_num_rows(<fuzzresource>)
<functioncall> = odbc_next_result(<fuzzresource>)
<functioncall> = odbc_num_fields(<fuzzresource>)
<functioncall> = odbc_field_name(<fuzzresource>, <fuzznumber>)
<functioncall> = odbc_field_type(<fuzzresource>, <fuzznumber>)
<functioncall> = odbc_field_num(<fuzzresource>, <fuzzstring>)
<functioncall> = odbc_autocommit(<fuzzresource>, <fuzznumber>)
<functioncall> = odbc_setoption(<fuzzresource>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = odbc_tables(<fuzzresource>, <fuzzstring>)
<functioncall> = odbc_tables(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = odbc_tables(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = odbc_tables(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = odbc_columns(<fuzzresource>, <fuzzstring>)
<functioncall> = odbc_columns(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = odbc_columns(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = odbc_columns(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = odbc_columnprivileges(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = odbc_foreignkeys(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = odbc_gettypeinfo(<fuzzresource>, <fuzznumber>)
<functioncall> = odbc_primarykeys(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = odbc_procedurecolumns(<fuzzresource>, <fuzzstring>)
<functioncall> = odbc_procedurecolumns(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = odbc_procedurecolumns(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = odbc_procedurecolumns(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = odbc_procedures(<fuzzresource>, <fuzzstring>)
<functioncall> = odbc_procedures(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = odbc_procedures(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = odbc_specialcolumns(<fuzzresource>, <fuzznumber>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = odbc_statistics(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = odbc_tableprivileges(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = posix_kill(<fuzznumber>, <fuzznumber>)
<functioncall> = posix_getgroups()
<functioncall> = posix_getlogin()
<functioncall> = posix_setpgid(<fuzznumber>, <fuzznumber>)
<functioncall> = posix_getpgid(<fuzznumber>)
<functioncall> = posix_getsid(<fuzznumber>)
<functioncall> = posix_uname()
<functioncall> = posix_times()
<functioncall> = posix_ctermid()
<functioncall> = posix_ttyname(<fuzzmixed>)
<functioncall> = posix_isatty(<fuzzmixed>)
<functioncall> = posix_getcwd()
<functioncall> = posix_mkfifo(<fuzzpath>, <fuzznumber>)
<functioncall> = posix_mknod(<fuzzpath>, <fuzznumber>)
<functioncall> = posix_mknod(<fuzzpath>, <fuzznumber>, <fuzznumber>)
<functioncall> = posix_mknod(<fuzzpath>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = posix_access(<fuzzpath>)
<functioncall> = posix_access(<fuzzpath>, <fuzznumber>)
<functioncall> = posix_getgrnam(<fuzzstring>)
<functioncall> = posix_getgrgid(<fuzznumber>)
<functioncall> = posix_getpwnam(<fuzzstring>)
<functioncall> = posix_getpwuid(<fuzznumber>)
<functioncall> = posix_getrlimit()
<functioncall> = posix_setrlimit(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = posix_get_last_error()
<functioncall> = posix_strerror(<fuzznumber>)
<functioncall> = posix_initgroups(<fuzzstring>, <fuzznumber>)
<methodcall> = <obj_Phar>->running(<fuzzbool>)
<methodcall> = <obj_Phar>->mount(<fuzzpath>, <fuzzpath>)
<methodcall> = <obj_Phar>->webPhar(<fuzzstring>)
<methodcall> = <obj_Phar>->webPhar(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_Phar>->webPhar(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_Phar>->webPhar(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzarray>)
<methodcall> = <obj_Phar>->webPhar(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzarray>, <fuzzfunction>)
<methodcall> = <obj_Phar>->mungServer(<fuzzarray>)
<methodcall> = <obj_Phar>->createDefaultStub(<fuzzpath>)
<methodcall> = <obj_Phar>->createDefaultStub(<fuzzpath>, <fuzzpath>)
<methodcall> = <obj_Phar>->mapPhar(<fuzzstring>)
<methodcall> = <obj_Phar>->mapPhar(<fuzzstring>, <fuzznumber>)
<methodcall> = <obj_Phar>->loadPhar(<fuzzpath>, <fuzzstring>)
<methodcall> = <obj_Phar>->canCompress(<fuzznumber>)
<methodcall> = <obj_Phar>->isValidPharFilename(<fuzzpath>, <fuzzbool>)
<methodcall> = <obj_Phar>->__construct(<fuzzpath>, <fuzznumber>)
<methodcall> = <obj_Phar>->__construct(<fuzzpath>, <fuzznumber>, <fuzzstring>)
<methodcall> = <obj_Phar>->__construct(<fuzzpath>, <fuzznumber>, <fuzzstring>, <fuzznumber>)
<methodcall> = <obj_Phar>->unlinkArchive(<fuzzpath>)
<methodcall> = <obj_Phar>->buildFromDirectory(<fuzzpath>, <fuzzstring>)
<methodcall> = <obj_Phar>->buildFromIterator(<fuzzobject>, <fuzzstring>)
<methodcall> = <obj_Phar>->count(<fuzznumber>)
<methodcall> = <obj_Phar>->isFileFormat(<fuzznumber>)
<methodcall> = <obj_Phar>->convertToExecutable(<fuzznumber>)
<methodcall> = <obj_Phar>->convertToExecutable(<fuzznumber>, <fuzznumber>)
<methodcall> = <obj_Phar>->convertToExecutable(<fuzznumber>, <fuzznumber>, <fuzzstring>)
<methodcall> = <obj_Phar>->convertToData(<fuzznumber>)
<methodcall> = <obj_Phar>->convertToData(<fuzznumber>, <fuzznumber>)
<methodcall> = <obj_Phar>->convertToData(<fuzznumber>, <fuzznumber>, <fuzzstring>)
<methodcall> = <obj_Phar>->delete(<fuzzpath>)
<methodcall> = <obj_Phar>->setAlias(<fuzzstring>)
<methodcall> = <obj_Phar>->setStub(<fuzzstring>)
<methodcall> = <obj_Phar>->setDefaultStub(<fuzzstring>)
<methodcall> = <obj_Phar>->setDefaultStub(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_Phar>->setSignatureAlgorithm(<fuzznumber>, <fuzzstring>)
<methodcall> = <obj_Phar>->compress(<fuzznumber>, <fuzzstring>)
<methodcall> = <obj_Phar>->decompress(<fuzzstring>)
<methodcall> = <obj_Phar>->compressFiles(<fuzznumber>)
<methodcall> = <obj_Phar>->copy(<fuzzpath>, <fuzzpath>)
<methodcall> = <obj_Phar>->offsetExists(<fuzzpath>)
<methodcall> = <obj_Phar>->offsetGet(<fuzzpath>)
<methodcall> = <obj_Phar>->offsetSet(<fuzzpath>, <fuzzstring>)
<methodcall> = <obj_Phar>->offsetUnset(<fuzzpath>)
<methodcall> = <obj_Phar>->addEmptyDir(<fuzzpath>)
<methodcall> = <obj_Phar>->addFile(<fuzzpath>, <fuzzstring>)
<methodcall> = <obj_Phar>->addFromString(<fuzzpath>, <fuzzstring>)
<methodcall> = <obj_Phar>->getMetadata()
<methodcall> = <obj_Phar>->getMetadata(<fuzzarray>)
<methodcall> = <obj_Phar>->setMetadata(<fuzzref>)
<methodcall> = <obj_Phar>->extractTo(<fuzzpath>)
<methodcall> = <obj_Phar>->extractTo(<fuzzpath>, <fuzzstring|array>)
<methodcall> = <obj_Phar>->extractTo(<fuzzpath>, <fuzzstring|array>, <fuzzbool>)
<methodcall> = <obj_PharFileInfo>->__construct(<fuzzpath>)
<methodcall> = <obj_PharFileInfo>->isCompressed(<fuzznumber>)
<methodcall> = <obj_PharFileInfo>->chmod(<fuzznumber>)
<methodcall> = <obj_PharFileInfo>->getMetadata()
<methodcall> = <obj_PharFileInfo>->getMetadata(<fuzzarray>)
<methodcall> = <obj_PharFileInfo>->setMetadata(<fuzzref>)
<methodcall> = <obj_PharFileInfo>->compress(<fuzznumber>)
<functioncall> = pcntl_alarm(<fuzznumber>)
<functioncall> = pcntl_waitpid(<fuzznumber>, <fuzzref>, <fuzznumber>)
<functioncall> = pcntl_waitpid(<fuzznumber>, <fuzzref>, <fuzznumber>, <fuzzref>)
<functioncall> = pcntl_wait(<fuzzref>, <fuzznumber>)
<functioncall> = pcntl_wait(<fuzzref>, <fuzznumber>, <fuzzref>)
<functioncall> = pcntl_wifexited(<fuzznumber>)
<functioncall> = pcntl_wifstopped(<fuzznumber>)
<functioncall> = pcntl_wifsignaled(<fuzznumber>)
<functioncall> = pcntl_wifcontinued(<fuzznumber>)
<functioncall> = pcntl_wexitstatus(<fuzznumber>)
<functioncall> = pcntl_wtermsig(<fuzznumber>)
<functioncall> = pcntl_wstopsig(<fuzznumber>)
<functioncall> = pcntl_exec(<fuzzpath>, <fuzzarray>)
<functioncall> = pcntl_exec(<fuzzpath>, <fuzzarray>, <fuzzarray>)
<functioncall> = pcntl_signal(<fuzznumber>, <fuzzref>, <fuzzbool>)
<functioncall> = pcntl_signal_get_handler(<fuzznumber>)
<functioncall> = pcntl_sigprocmask(<fuzznumber>, <fuzzarray>, <fuzzref>)
<functioncall> = pcntl_getpriority(<fuzznumber>)
<functioncall> = pcntl_getpriority(<fuzznumber>, <fuzznumber>)
<functioncall> = pcntl_setpriority(<fuzznumber>, <fuzznumber>)
<functioncall> = pcntl_setpriority(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = pcntl_strerror(<fuzznumber>)
<functioncall> = pcntl_async_signals(<fuzzbool>)
<functioncall> = pcntl_unshare(<fuzznumber>)
<methodcall> = <obj_SplHeap>->insert(<fuzzref>)
<methodcall> = <obj_SplPriorityQueue>->insert(<fuzzref>, <fuzzref>)
<methodcall> = <obj_SplPriorityQueue>->setExtractFlags(<fuzznumber>)
<methodcall> = <obj_SplPriorityQueue>->compare(<fuzzref>, <fuzzref>)
<methodcall> = <obj_SplMinHeap>->compare(<fuzzref>, <fuzzref>)
<methodcall> = <obj_SplMaxHeap>->compare(<fuzzref>, <fuzzref>)
<methodcall> = <obj_RecursiveIteratorIterator>->getSubIterator(<fuzznumber>)
<methodcall> = <obj_RecursiveIteratorIterator>->setMaxDepth(<fuzznumber>)
<methodcall> = <obj_RecursiveTreeIterator>->setPrefixPart(<fuzznumber>, <fuzzstring>)
<methodcall> = <obj_RecursiveTreeIterator>->setPostfix(<fuzzstring>)
<methodcall> = <obj_RegexIterator>->setMode(<fuzznumber>)
<methodcall> = <obj_RegexIterator>->setFlags(<fuzznumber>)
<methodcall> = <obj_RegexIterator>->setPregFlags(<fuzznumber>)
<methodcall> = <obj_LimitIterator>->seek(<fuzznumber>)
<methodcall> = <obj_CachingIterator>->offsetSet(<fuzzstring>, <fuzzref>)
<methodcall> = <obj_CachingIterator>->offsetGet(<fuzzstring>)
<methodcall> = <obj_CachingIterator>->offsetUnset(<fuzzstring>)
<methodcall> = <obj_CachingIterator>->offsetExists(<fuzzstring>)
<methodcall> = <obj_CachingIterator>->setFlags(<fuzznumber>)
<methodcall> = <obj_AppendIterator>->append(<fuzzobject>)
<functioncall> = iterator_to_array(<fuzzobject>, <fuzzbool>)
<functioncall> = iterator_count(<fuzzobject>)
<functioncall> = iterator_apply(<fuzzobject>, <fuzzfunction>, <fuzzarray>)
<methodcall> = <obj_SplObjectStorage>->attach(<fuzzobject>, <fuzzref>)
<methodcall> = <obj_SplObjectStorage>->detach(<fuzzobject>)
<methodcall> = <obj_SplObjectStorage>->getHash(<fuzzobject>)
<methodcall> = <obj_SplObjectStorage>->offsetGet(<fuzzobject>)
<methodcall> = <obj_SplObjectStorage>->addAll(<fuzzobject>)
<methodcall> = <obj_SplObjectStorage>->removeAll(<fuzzobject>)
<methodcall> = <obj_SplObjectStorage>->removeAllExcept(<fuzzobject>)
<methodcall> = <obj_SplObjectStorage>->contains(<fuzzobject>)
<methodcall> = <obj_SplObjectStorage>->count(<fuzznumber>)
<methodcall> = <obj_SplObjectStorage>->setInfo(<fuzzref>)
<methodcall> = <obj_SplObjectStorage>->unserialize(<fuzzstring>)
<methodcall> = <obj_SplObjectStorage>->__unserialize(<fuzzarray>)
<methodcall> = <obj_MultipleIterator>->__construct(<fuzznumber>)
<methodcall> = <obj_MultipleIterator>->setFlags(<fuzznumber>)
<methodcall> = <obj_MultipleIterator>->attachIterator(<fuzzobject>, <fuzzref>)
<methodcall> = <obj_MultipleIterator>->detachIterator(<fuzzobject>)
<methodcall> = <obj_MultipleIterator>->containsIterator(<fuzzobject>)
<methodcall> = <obj_SplFixedArray>->__construct(<fuzznumber>)
<methodcall> = <obj_SplFixedArray>->fromArray(<fuzzarray>, <fuzzbool>)
<methodcall> = <obj_SplFixedArray>->setSize(<fuzznumber>)
<methodcall> = <obj_SplFixedArray>->offsetExists(<fuzzref>)
<methodcall> = <obj_SplFixedArray>->offsetGet(<fuzzref>)
<methodcall> = <obj_SplFixedArray>->offsetSet(<fuzzref>, <fuzzref>)
<methodcall> = <obj_SplFixedArray>->offsetUnset(<fuzzref>)
<methodcall> = <obj_DirectoryIterator>->seek(<fuzznumber>)
<methodcall> = <obj_SplFileInfo>->getBasename(<fuzzstring>)
<methodcall> = <obj_DirectoryIterator>->getBasename(<fuzzstring>)
<methodcall> = <obj_SplFileInfo>->__construct(<fuzzpath>)
<methodcall> = <obj_SplFileInfo>->setFileClass(<fuzzclass>)
<methodcall> = <obj_SplFileInfo>->setInfoClass(<fuzzclass>)
<methodcall> = <obj_SplFileInfo>->getFileInfo(<fuzzclass>)
<methodcall> = <obj_SplFileInfo>->getPathInfo(<fuzzclass>)
<methodcall> = <obj_FilesystemIterator>->setFlags(<fuzznumber>)
<methodcall> = <obj_RecursiveDirectoryIterator>->hasChildren(<fuzzbool>)
<methodcall> = <obj_SplFileObject>->__construct(<fuzzpath>, <fuzzstring>)
<methodcall> = <obj_SplFileObject>->__construct(<fuzzpath>, <fuzzstring>, <fuzzbool>)
<methodcall> = <obj_SplFileObject>->__construct(<fuzzpath>, <fuzzstring>, <fuzzbool>, <fuzzresource>)
<methodcall> = <obj_SplTempFileObject>->__construct(<fuzznumber>)
<methodcall> = <obj_SplFileObject>->setFlags(<fuzznumber>)
<methodcall> = <obj_SplFileObject>->setMaxLineLen(<fuzznumber>)
<methodcall> = <obj_SplFileObject>->fgetcsv(<fuzzstring>)
<methodcall> = <obj_SplFileObject>->fgetcsv(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SplFileObject>->fgetcsv(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SplFileObject>->fputcsv(<fuzzarray>, <fuzzstring>)
<methodcall> = <obj_SplFileObject>->fputcsv(<fuzzarray>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SplFileObject>->fputcsv(<fuzzarray>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SplFileObject>->setCsvControl(<fuzzstring>)
<methodcall> = <obj_SplFileObject>->setCsvControl(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SplFileObject>->setCsvControl(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SplFileObject>->fseek(<fuzznumber>, <fuzznumber>)
<methodcall> = <obj_SplFileObject>->fwrite(<fuzzstring>, <fuzznumber>)
<methodcall> = <obj_SplFileObject>->fread(<fuzznumber>)
<methodcall> = <obj_SplFileObject>->ftruncate(<fuzznumber>)
<methodcall> = <obj_SplFileObject>->seek(<fuzznumber>)
<functioncall> = class_parents(<fuzzref>, <fuzzbool>)
<functioncall> = class_implements(<fuzzref>, <fuzzbool>)
<functioncall> = class_uses(<fuzzref>, <fuzzbool>)
<functioncall> = spl_autoload(<fuzzstring>, <fuzzstring>)
<functioncall> = spl_autoload_extensions(<fuzzstring>)
<functioncall> = spl_autoload_call(<fuzzstring>)
<functioncall> = spl_autoload_register()
<functioncall> = spl_autoload_register(<fuzzfunction>)
<functioncall> = spl_autoload_register(<fuzzfunction>, <fuzzbool>)
<functioncall> = spl_autoload_register(<fuzzfunction>, <fuzzbool>, <fuzzbool>)
<functioncall> = spl_autoload_unregister(<fuzzfunction>)
<functioncall> = spl_object_hash(<fuzzobject>)
<functioncall> = spl_object_id(<fuzzobject>)
<methodcall> = <obj_ArrayObject>->offsetExists(<fuzzref>)
<methodcall> = <obj_ArrayObject>->offsetGet(<fuzzref>)
<methodcall> = <obj_ArrayObject>->offsetSet(<fuzzref>, <fuzzref>)
<methodcall> = <obj_ArrayObject>->append(<fuzzref>)
<methodcall> = <obj_ArrayObject>->offsetUnset(<fuzzref>)
<methodcall> = <obj_ArrayObject>->__construct(<fuzzref>)
<methodcall> = <obj_ArrayObject>->__construct(<fuzzref>, <fuzznumber>)
<methodcall> = <obj_ArrayObject>->__construct(<fuzzref>, <fuzznumber>, <fuzzclass>)
<methodcall> = <obj_ArrayIterator>->__construct(<fuzzref>)
<methodcall> = <obj_ArrayIterator>->__construct(<fuzzref>, <fuzznumber>)
<methodcall> = <obj_ArrayObject>->setIteratorClass(<fuzzclass>)
<methodcall> = <obj_ArrayObject>->setFlags(<fuzznumber>)
<methodcall> = <obj_ArrayObject>->exchangeArray(<fuzzref>)
<methodcall> = <obj_ArrayIterator>->seek(<fuzznumber>)
<methodcall> = <obj_ArrayObject>->unserialize(<fuzzstring>)
<methodcall> = <obj_ArrayObject>->__unserialize(<fuzzarray>)
<methodcall> = <obj_SplDoublyLinkedList>->push(<fuzzref>)
<methodcall> = <obj_SplDoublyLinkedList>->unshift(<fuzzref>)
<methodcall> = <obj_SplDoublyLinkedList>->setIteratorMode(<fuzznumber>)
<methodcall> = <obj_SplDoublyLinkedList>->offsetExists(<fuzzref>)
<methodcall> = <obj_SplDoublyLinkedList>->offsetGet(<fuzzref>)
<methodcall> = <obj_SplDoublyLinkedList>->offsetSet(<fuzzref>, <fuzzref>)
<methodcall> = <obj_SplDoublyLinkedList>->offsetUnset(<fuzzref>)
<methodcall> = <obj_SplDoublyLinkedList>->unserialize(<fuzzstring>)
<methodcall> = <obj_SplDoublyLinkedList>->__unserialize(<fuzzarray>)
<methodcall> = <obj_SplDoublyLinkedList>->add(<fuzzref>, <fuzzref>)
<functioncall> = enchant_broker_free(<fuzzobject>)
<functioncall> = enchant_broker_get_error(<fuzzobject>)
<functioncall> = enchant_broker_set_dict_path(<fuzzobject>, <fuzznumber>, <fuzzstring>)
<functioncall> = enchant_broker_get_dict_path(<fuzzobject>, <fuzznumber>)
<functioncall> = enchant_broker_list_dicts(<fuzzobject>)
<functioncall> = enchant_broker_request_dict(<fuzzobject>, <fuzzstring>)
<functioncall> = enchant_broker_request_pwl_dict(<fuzzobject>, <fuzzpath>)
<functioncall> = enchant_broker_free_dict(<fuzzobject>)
<functioncall> = enchant_broker_dict_exists(<fuzzobject>, <fuzzstring>)
<functioncall> = enchant_broker_set_ordering(<fuzzobject>, <fuzzstring>, <fuzzstring>)
<functioncall> = enchant_broker_describe(<fuzzobject>)
<functioncall> = enchant_dict_quick_check(<fuzzobject>, <fuzzstring>, <fuzzref>)
<functioncall> = enchant_dict_check(<fuzzobject>, <fuzzstring>)
<functioncall> = enchant_dict_suggest(<fuzzobject>, <fuzzstring>)
<functioncall> = enchant_dict_add(<fuzzobject>, <fuzzstring>)
<functioncall> = enchant_dict_add_to_session(<fuzzobject>, <fuzzstring>)
<functioncall> = enchant_dict_is_added(<fuzzobject>, <fuzzstring>)
<functioncall> = enchant_dict_store_replacement(<fuzzobject>, <fuzzstring>, <fuzzstring>)
<functioncall> = enchant_dict_get_error(<fuzzobject>)
<functioncall> = enchant_dict_describe(<fuzzobject>)
<functioncall> = filter_has_var(<fuzznumber>, <fuzzstring>)
<functioncall> = filter_input(<fuzznumber>, <fuzzstring>, <fuzznumber>)
<functioncall> = filter_input(<fuzznumber>, <fuzzstring>, <fuzznumber>, <fuzzref>)
<functioncall> = filter_var(<fuzzref>, <fuzznumber>)
<functioncall> = filter_var(<fuzzref>, <fuzznumber>, <fuzzref>)
<functioncall> = filter_input_array(<fuzznumber>, <fuzzref>)
<functioncall> = filter_input_array(<fuzznumber>, <fuzzref>, <fuzzbool>)
<functioncall> = filter_var_array(<fuzzarray>, <fuzzref>)
<functioncall> = filter_var_array(<fuzzarray>, <fuzzref>, <fuzzbool>)
<functioncall> = filter_id(<fuzzstring>)
<functioncall> = bcadd(<fuzzstring>, <fuzzstring>)
<functioncall> = bcadd(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = bcsub(<fuzzstring>, <fuzzstring>)
<functioncall> = bcsub(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = bcmul(<fuzzstring>, <fuzzstring>)
<functioncall> = bcmul(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = bcdiv(<fuzzstring>, <fuzzstring>)
<functioncall> = bcdiv(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = bcmod(<fuzzstring>, <fuzzstring>)
<functioncall> = bcmod(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = bcpowmod(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = bcpowmod(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = bcpow(<fuzzstring>, <fuzzstring>)
<functioncall> = bcpow(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = bcsqrt(<fuzzstring>)
<functioncall> = bcsqrt(<fuzzstring>, <fuzznumber>)
<functioncall> = bccomp(<fuzzstring>, <fuzzstring>)
<functioncall> = bccomp(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = bcscale()
<functioncall> = bcscale(<fuzznumber>)
<methodcall> = <obj_SessionHandler>->open(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SessionHandler>->read(<fuzzstring>)
<methodcall> = <obj_SessionHandler>->write(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SessionHandler>->destroy(<fuzzstring>)
<methodcall> = <obj_SessionHandler>->gc(<fuzznumber>)
<functioncall> = session_set_cookie_params(<fuzzmixed>)
<functioncall> = session_set_cookie_params(<fuzzmixed>, <fuzzstring>)
<functioncall> = session_set_cookie_params(<fuzzmixed>, <fuzzstring>, <fuzzstring>)
<functioncall> = session_set_cookie_params(<fuzzmixed>, <fuzzstring>, <fuzzstring>, <fuzzbool>)
<functioncall> = session_set_cookie_params(<fuzzmixed>, <fuzzstring>, <fuzzstring>, <fuzzbool>, <fuzzbool>)
<functioncall> = session_name(<fuzzstring>)
<functioncall> = session_module_name(<fuzzstring>)
<functioncall> = session_set_save_handler(<fuzzobject>, <fuzzbool>)
<functioncall> = session_save_path(<fuzzpath>)
<functioncall> = session_id(<fuzzstring>)
<functioncall> = session_regenerate_id(<fuzzbool>)
<functioncall> = session_create_id(<fuzzstring>)
<functioncall> = session_cache_limiter(<fuzzstring>)
<functioncall> = session_cache_expire(<fuzznumber>)
<functioncall> = session_decode(<fuzzstring>)
<functioncall> = session_start(<fuzzarray>)
<functioncall> = session_register_shutdown()
<functioncall> = imap_reopen(<fuzzresource>, <fuzzstring>, <fuzznumber>)
<functioncall> = imap_reopen(<fuzzresource>, <fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = imap_append(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = imap_append(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = imap_num_msg(<fuzzresource>)
<functioncall> = imap_ping(<fuzzresource>)
<functioncall> = imap_num_recent(<fuzzresource>)
<functioncall> = imap_get_quota(<fuzzresource>, <fuzzstring>)
<functioncall> = imap_get_quotaroot(<fuzzresource>, <fuzzstring>)
<functioncall> = imap_set_quota(<fuzzresource>, <fuzzstring>, <fuzznumber>)
<functioncall> = imap_setacl(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = imap_getacl(<fuzzresource>, <fuzzstring>)
<functioncall> = imap_expunge(<fuzzresource>)
<functioncall> = imap_gc(<fuzzresource>, <fuzznumber>)
<functioncall> = imap_close(<fuzzresource>, <fuzznumber>)
<functioncall> = imap_headers(<fuzzresource>)
<functioncall> = imap_body(<fuzzresource>, <fuzznumber>, <fuzznumber>)
<functioncall> = imap_mail_copy(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = imap_mail_move(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = imap_createmailbox(<fuzzresource>, <fuzzstring>)
<functioncall> = imap_renamemailbox(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = imap_deletemailbox(<fuzzresource>, <fuzzstring>)
<functioncall> = imap_list(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = imap_getmailboxes(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = imap_listscan(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = imap_check(<fuzzresource>)
<functioncall> = imap_delete(<fuzzresource>, <fuzzref>, <fuzznumber>)
<functioncall> = imap_undelete(<fuzzresource>, <fuzzref>, <fuzznumber>)
<functioncall> = imap_headerinfo(<fuzzresource>, <fuzznumber>, <fuzznumber>)
<functioncall> = imap_headerinfo(<fuzzresource>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imap_headerinfo(<fuzzresource>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzzstring>)
<functioncall> = imap_rfc822_parse_headers(<fuzzstring>, <fuzzstring>)
<functioncall> = imap_lsub(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = imap_getsubscribed(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = imap_subscribe(<fuzzresource>, <fuzzstring>)
<functioncall> = imap_unsubscribe(<fuzzresource>, <fuzzstring>)
<functioncall> = imap_fetchstructure(<fuzzresource>, <fuzznumber>, <fuzznumber>)
<functioncall> = imap_fetchbody(<fuzzresource>, <fuzznumber>, <fuzzstring>, <fuzznumber>)
<functioncall> = imap_fetchmime(<fuzzresource>, <fuzznumber>, <fuzzstring>, <fuzznumber>)
<functioncall> = imap_savebody(<fuzzresource>, <fuzzref>, <fuzznumber>, <fuzzstring>)
<functioncall> = imap_savebody(<fuzzresource>, <fuzzref>, <fuzznumber>, <fuzzstring>, <fuzznumber>)
<functioncall> = imap_base64(<fuzzstring>)
<functioncall> = imap_qprint(<fuzzstring>)
<functioncall> = imap_8bit(<fuzzstring>)
<functioncall> = imap_binary(<fuzzstring>)
<functioncall> = imap_mailboxmsginfo(<fuzzresource>)
<functioncall> = imap_rfc822_write_address(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = imap_rfc822_parse_adrlist(<fuzzstring>, <fuzzstring>)
<functioncall> = imap_utf8(<fuzzstring>)
<functioncall> = imap_utf7_decode(<fuzzstring>)
<functioncall> = imap_utf7_encode(<fuzzstring>)
<functioncall> = imap_setflag_full(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = imap_clearflag_full(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = imap_sort(<fuzzresource>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imap_sort(<fuzzresource>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzzstring>)
<functioncall> = imap_sort(<fuzzresource>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzzstring>, <fuzzstring>)
<functioncall> = imap_fetchheader(<fuzzresource>, <fuzznumber>, <fuzznumber>)
<functioncall> = imap_uid(<fuzzresource>, <fuzznumber>)
<functioncall> = imap_msgno(<fuzzresource>, <fuzznumber>)
<functioncall> = imap_status(<fuzzresource>, <fuzzstring>, <fuzznumber>)
<functioncall> = imap_bodystruct(<fuzzresource>, <fuzznumber>, <fuzzstring>)
<functioncall> = imap_fetch_overview(<fuzzresource>, <fuzzstring>, <fuzznumber>)
<functioncall> = imap_mail_compose(<fuzzarray>, <fuzzarray>)
<functioncall> = imap_mail(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = imap_mail(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = imap_mail(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = imap_mail(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = imap_search(<fuzzresource>, <fuzzstring>, <fuzznumber>)
<functioncall> = imap_search(<fuzzresource>, <fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = imap_mime_header_decode(<fuzzstring>)
<functioncall> = imap_thread(<fuzzresource>, <fuzznumber>)
<functioncall> = imap_timeout(<fuzznumber>, <fuzznumber>)
<functioncall> = simplexml_load_file(<fuzzpath>, <fuzzclass>)
<functioncall> = simplexml_load_file(<fuzzpath>, <fuzzclass>, <fuzznumber>)
<functioncall> = simplexml_load_file(<fuzzpath>, <fuzzclass>, <fuzznumber>, <fuzzstring>)
<functioncall> = simplexml_load_file(<fuzzpath>, <fuzzclass>, <fuzznumber>, <fuzzstring>, <fuzzbool>)
<functioncall> = simplexml_load_string(<fuzzstring>, <fuzzclass>)
<functioncall> = simplexml_load_string(<fuzzstring>, <fuzzclass>, <fuzznumber>)
<functioncall> = simplexml_load_string(<fuzzstring>, <fuzzclass>, <fuzznumber>, <fuzzstring>)
<functioncall> = simplexml_load_string(<fuzzstring>, <fuzzclass>, <fuzznumber>, <fuzzstring>, <fuzzbool>)
<functioncall> = simplexml_import_dom(<fuzzobject>, <fuzzclass>)
<functioncall> = ftp_connect(<fuzzstring>, <fuzznumber>)
<functioncall> = ftp_connect(<fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = ftp_ssl_connect(<fuzzstring>, <fuzznumber>)
<functioncall> = ftp_ssl_connect(<fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = ftp_login(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = ftp_pwd(<fuzzresource>)
<functioncall> = ftp_cdup(<fuzzresource>)
<functioncall> = ftp_chdir(<fuzzresource>, <fuzzstring>)
<functioncall> = ftp_exec(<fuzzresource>, <fuzzstring>)
<functioncall> = ftp_raw(<fuzzresource>, <fuzzstring>)
<functioncall> = ftp_mkdir(<fuzzresource>, <fuzzstring>)
<functioncall> = ftp_rmdir(<fuzzresource>, <fuzzstring>)
<functioncall> = ftp_chmod(<fuzzresource>, <fuzznumber>, <fuzzpath>)
<functioncall> = ftp_alloc(<fuzzresource>, <fuzznumber>, <fuzzref>)
<functioncall> = ftp_nlist(<fuzzresource>, <fuzzpath>)
<functioncall> = ftp_rawlist(<fuzzresource>, <fuzzstring>, <fuzzbool>)
<functioncall> = ftp_mlsd(<fuzzresource>, <fuzzstring>)
<functioncall> = ftp_systype(<fuzzresource>)
<functioncall> = ftp_fget(<fuzzresource>, <fuzzresource>, <fuzzstring>, <fuzznumber>)
<functioncall> = ftp_fget(<fuzzresource>, <fuzzresource>, <fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = ftp_nb_fget(<fuzzresource>, <fuzzresource>, <fuzzstring>, <fuzznumber>)
<functioncall> = ftp_nb_fget(<fuzzresource>, <fuzzresource>, <fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = ftp_pasv(<fuzzresource>, <fuzzbool>)
<functioncall> = ftp_get(<fuzzresource>, <fuzzpath>, <fuzzpath>, <fuzznumber>)
<functioncall> = ftp_get(<fuzzresource>, <fuzzpath>, <fuzzpath>, <fuzznumber>, <fuzznumber>)
<functioncall> = ftp_nb_get(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = ftp_nb_get(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = ftp_nb_continue(<fuzzresource>)
<functioncall> = ftp_fput(<fuzzresource>, <fuzzstring>, <fuzzresource>, <fuzznumber>)
<functioncall> = ftp_fput(<fuzzresource>, <fuzzstring>, <fuzzresource>, <fuzznumber>, <fuzznumber>)
<functioncall> = ftp_nb_fput(<fuzzresource>, <fuzzstring>, <fuzzresource>, <fuzznumber>)
<functioncall> = ftp_nb_fput(<fuzzresource>, <fuzzstring>, <fuzzresource>, <fuzznumber>, <fuzznumber>)
<functioncall> = ftp_put(<fuzzresource>, <fuzzpath>, <fuzzpath>, <fuzznumber>)
<functioncall> = ftp_put(<fuzzresource>, <fuzzpath>, <fuzzpath>, <fuzznumber>, <fuzznumber>)
<functioncall> = ftp_append(<fuzzresource>, <fuzzpath>, <fuzzpath>, <fuzznumber>)
<functioncall> = ftp_nb_put(<fuzzresource>, <fuzzpath>, <fuzzpath>, <fuzznumber>)
<functioncall> = ftp_nb_put(<fuzzresource>, <fuzzpath>, <fuzzpath>, <fuzznumber>, <fuzznumber>)
<functioncall> = ftp_size(<fuzzresource>, <fuzzpath>)
<functioncall> = ftp_mdtm(<fuzzresource>, <fuzzpath>)
<functioncall> = ftp_rename(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = ftp_delete(<fuzzresource>, <fuzzstring>)
<functioncall> = ftp_site(<fuzzresource>, <fuzzstring>)
<functioncall> = ftp_close(<fuzzresource>)
<functioncall> = ftp_set_option(<fuzzresource>, <fuzznumber>, <fuzzref>)
<functioncall> = ftp_get_option(<fuzzresource>, <fuzznumber>)
<functioncall> = zip_open(<fuzzpath>)
<functioncall> = zip_close(<fuzzresource>)
<functioncall> = zip_read(<fuzzresource>)
<functioncall> = zip_entry_open(<fuzzresource>, <fuzzresource>, <fuzzstring>)
<functioncall> = zip_entry_close(<fuzzresource>)
<functioncall> = zip_entry_read(<fuzzresource>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->open(<fuzzpath>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->setPassword(<fuzzstring>)
<methodcall> = <obj_ZipArchive>->addEmptyDir(<fuzzstring>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->addFile(<fuzzpath>, <fuzzstring>)
<methodcall> = <obj_ZipArchive>->addFile(<fuzzpath>, <fuzzstring>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->addFile(<fuzzpath>, <fuzzstring>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->addFile(<fuzzpath>, <fuzzstring>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->replaceFile(<fuzzpath>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->replaceFile(<fuzzpath>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->replaceFile(<fuzzpath>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->addFromString(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->statName(<fuzzpath>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->statIndex(<fuzznumber>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->locateName(<fuzzpath>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->getNameIndex(<fuzznumber>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->setArchiveComment(<fuzzstring>)
<methodcall> = <obj_ZipArchive>->getArchiveComment(<fuzznumber>)
<methodcall> = <obj_ZipArchive>->setCommentName(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_ZipArchive>->setCommentIndex(<fuzznumber>, <fuzzstring>)
<methodcall> = <obj_ZipArchive>->setExternalAttributesName(<fuzzstring>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->setExternalAttributesIndex(<fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->getExternalAttributesName(<fuzzstring>, <fuzzref>, <fuzzref>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->getExternalAttributesIndex(<fuzznumber>, <fuzzref>, <fuzzref>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->setEncryptionName(<fuzzstring>, <fuzznumber>, <fuzzstring>)
<methodcall> = <obj_ZipArchive>->setEncryptionIndex(<fuzznumber>, <fuzznumber>, <fuzzstring>)
<methodcall> = <obj_ZipArchive>->getCommentName(<fuzzstring>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->getCommentIndex(<fuzznumber>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->setCompressionName(<fuzzstring>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->setCompressionIndex(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->setMtimeName(<fuzzstring>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->setMtimeIndex(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_ZipArchive>->deleteIndex(<fuzznumber>)
<methodcall> = <obj_ZipArchive>->deleteName(<fuzzstring>)
<methodcall> = <obj_ZipArchive>->renameIndex(<fuzznumber>, <fuzzstring>)
<methodcall> = <obj_ZipArchive>->renameName(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_ZipArchive>->unchangeIndex(<fuzznumber>)
<methodcall> = <obj_ZipArchive>->unchangeName(<fuzzstring>)
<methodcall> = <obj_ZipArchive>->extractTo(<fuzzpath>, <fuzzref>)
<methodcall> = <obj_ZipArchive>->getStream(<fuzzpath>)
<methodcall> = <obj_ZipArchive>->registerProgressCallback(<fuzznumber>, <fuzzfunction>)
<methodcall> = <obj_ZipArchive>->registerCancelCallback(<fuzzfunction>)
<methodcall> = <obj_ZipArchive>->isCompressionMethodSupported(<fuzznumber>, <fuzzbool>)
<methodcall> = <obj_ZipArchive>->isEncryptionMethodSupported(<fuzznumber>, <fuzzbool>)
<functioncall> = bzread(<fuzzresource>, <fuzznumber>)
<functioncall> = bzopen(<fuzzref>, <fuzzstring>)
<functioncall> = bzcompress(<fuzzstring>, <fuzznumber>)
<functioncall> = bzcompress(<fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = bzdecompress(<fuzzstring>, <fuzznumber>)
<functioncall> = snmp_set_quick_print(<fuzznumber>)
<functioncall> = snmp_set_enum_print(<fuzznumber>)
<functioncall> = snmp_set_oid_output_format(<fuzznumber>)
<functioncall> = snmp_set_valueretrieval(<fuzznumber>)
<functioncall> = snmp_read_mib(<fuzzpath>)
<methodcall> = <obj_SNMP>->__construct(<fuzznumber>, <fuzzstring>, <fuzzstring>, <fuzznumber>)
<methodcall> = <obj_SNMP>->__construct(<fuzznumber>, <fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_SNMP>->setSecurity(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SNMP>->setSecurity(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SNMP>->setSecurity(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SNMP>->setSecurity(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SNMP>->setSecurity(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SNMP>->setSecurity(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_memcmp(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_shorthash(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_secretbox(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_secretbox_open(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_generichash(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_generichash(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = sodium_crypto_generichash_init(<fuzzstring>)
<functioncall> = sodium_crypto_generichash_init(<fuzzstring>, <fuzznumber>)
<functioncall> = sodium_crypto_generichash_update(<fuzzref>, <fuzzstring>)
<functioncall> = sodium_crypto_generichash_final(<fuzzref>, <fuzznumber>)
<functioncall> = sodium_crypto_box_seed_keypair(<fuzzstring>)
<functioncall> = sodium_crypto_box_keypair_from_secretkey_and_publickey(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_box_secretkey(<fuzzstring>)
<functioncall> = sodium_crypto_box_publickey(<fuzzstring>)
<functioncall> = sodium_crypto_box_publickey_from_secretkey(<fuzzstring>)
<functioncall> = sodium_crypto_box(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_box_open(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_box_seal(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_box_seal_open(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_sign_seed_keypair(<fuzzstring>)
<functioncall> = sodium_crypto_sign_keypair_from_secretkey_and_publickey(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_sign_publickey_from_secretkey(<fuzzstring>)
<functioncall> = sodium_crypto_sign_secretkey(<fuzzstring>)
<functioncall> = sodium_crypto_sign_publickey(<fuzzstring>)
<functioncall> = sodium_crypto_sign(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_sign_open(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_sign_detached(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_sign_verify_detached(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_stream(<fuzznumber>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_stream_xor(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_pwhash(<fuzznumber>, <fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = sodium_crypto_pwhash_str(<fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = sodium_crypto_pwhash_str_needs_rehash(<fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = sodium_crypto_pwhash_str_verify(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_pwhash_scryptsalsa208sha256(<fuzznumber>, <fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = sodium_crypto_pwhash_scryptsalsa208sha256_str(<fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = sodium_crypto_pwhash_scryptsalsa208sha256_str_verify(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_aead_aes256gcm_encrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_aead_aes256gcm_decrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_aead_chacha20poly1305_encrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_aead_chacha20poly1305_decrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_aead_chacha20poly1305_ietf_encrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_aead_chacha20poly1305_ietf_decrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_aead_xchacha20poly1305_ietf_encrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_aead_xchacha20poly1305_ietf_decrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_bin2hex(<fuzzstring>)
<functioncall> = sodium_hex2bin(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_bin2base64(<fuzzstring>, <fuzznumber>)
<functioncall> = sodium_base642bin(<fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = sodium_crypto_scalarmult(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_kx_seed_keypair(<fuzzstring>)
<functioncall> = sodium_crypto_kx_secretkey(<fuzzstring>)
<functioncall> = sodium_crypto_kx_publickey(<fuzzstring>)
<functioncall> = sodium_crypto_kx_client_session_keys(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_kx_server_session_keys(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_auth(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_auth_verify(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_sign_ed25519_sk_to_curve25519(<fuzzstring>)
<functioncall> = sodium_crypto_sign_ed25519_pk_to_curve25519(<fuzzstring>)
<functioncall> = sodium_compare(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_kdf_derive_from_key(<fuzznumber>, <fuzznumber>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_pad(<fuzzstring>, <fuzznumber>)
<functioncall> = sodium_unpad(<fuzzstring>, <fuzznumber>)
<functioncall> = sodium_crypto_secretstream_xchacha20poly1305_init_push(<fuzzstring>)
<functioncall> = sodium_crypto_secretstream_xchacha20poly1305_push(<fuzzref>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_secretstream_xchacha20poly1305_push(<fuzzref>, <fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = sodium_crypto_secretstream_xchacha20poly1305_init_pull(<fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_secretstream_xchacha20poly1305_pull(<fuzzref>, <fuzzstring>, <fuzzstring>)
<functioncall> = sodium_crypto_secretstream_xchacha20poly1305_rekey(<fuzzref>)
<functioncall> = exif_tagname(<fuzznumber>)
<functioncall> = exif_read_data(<fuzzmixed>)
<functioncall> = exif_read_data(<fuzzmixed>, <fuzzstring>)
<functioncall> = exif_read_data(<fuzzmixed>, <fuzzstring>, <fuzzbool>)
<functioncall> = exif_read_data(<fuzzmixed>, <fuzzstring>, <fuzzbool>, <fuzzbool>)
<functioncall> = exif_thumbnail(<fuzzmixed>)
<functioncall> = exif_thumbnail(<fuzzmixed>, <fuzzmixed>)
<functioncall> = exif_thumbnail(<fuzzmixed>, <fuzzmixed>, <fuzzmixed>)
<functioncall> = exif_thumbnail(<fuzzmixed>, <fuzzmixed>, <fuzzmixed>, <fuzzmixed>)
<functioncall> = exif_imagetype(<fuzzpath>)
<functioncall> = pspell_new(<fuzzstring>, <fuzzstring>)
<functioncall> = pspell_new(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = pspell_new(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = pspell_new(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = pspell_new_personal(<fuzzpath>, <fuzzstring>, <fuzzstring>)
<functioncall> = pspell_new_personal(<fuzzpath>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = pspell_new_personal(<fuzzpath>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = pspell_new_personal(<fuzzpath>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = pspell_new_config(<fuzznumber>)
<functioncall> = pspell_check(<fuzznumber>, <fuzzstring>)
<functioncall> = pspell_suggest(<fuzznumber>, <fuzzstring>)
<functioncall> = pspell_store_replacement(<fuzznumber>, <fuzzstring>, <fuzzstring>)
<functioncall> = pspell_add_to_personal(<fuzznumber>, <fuzzstring>)
<functioncall> = pspell_add_to_session(<fuzznumber>, <fuzzstring>)
<functioncall> = pspell_clear_session(<fuzznumber>)
<functioncall> = pspell_save_wordlist(<fuzznumber>)
<functioncall> = pspell_config_create(<fuzzstring>, <fuzzstring>)
<functioncall> = pspell_config_create(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = pspell_config_create(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = pspell_config_runtogether(<fuzznumber>, <fuzzbool>)
<functioncall> = pspell_config_mode(<fuzznumber>, <fuzznumber>)
<functioncall> = pspell_config_ignore(<fuzznumber>, <fuzznumber>)
<functioncall> = pspell_config_repl(<fuzznumber>, <fuzzpath>)
<functioncall> = pspell_config_save_repl(<fuzznumber>, <fuzzbool>)
<methodcall> = <obj_XSLTProcessor>->importStylesheet(<fuzzobject>)
<methodcall> = <obj_XSLTProcessor>->transformToDoc(<fuzzobject>, <fuzzstring>)
<methodcall> = <obj_XSLTProcessor>->transformToUri(<fuzzobject>, <fuzzpath>)
<methodcall> = <obj_XSLTProcessor>->transformToXml(<fuzzobject>)
<methodcall> = <obj_XSLTProcessor>->getParameter(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_XSLTProcessor>->removeParameter(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_XSLTProcessor>->registerPHPFunctions()
<methodcall> = <obj_XSLTProcessor>->registerPHPFunctions(<fuzzstring|array>)
<methodcall> = <obj_XSLTProcessor>->setProfiling(<fuzzpath>)
<methodcall> = <obj_XSLTProcessor>->setSecurityPrefs(<fuzznumber>)
<functioncall> = oci_register_taf_callback(<fuzzresource>, <fuzzfunction>)
<functioncall> = oci_unregister_taf_callback(<fuzzresource>)
<functioncall> = oci_define_by_name(<fuzzresource>, <fuzzstring>, <fuzzmixed>)
<functioncall> = oci_define_by_name(<fuzzresource>, <fuzzstring>, <fuzzmixed>, <fuzznumber>)
<functioncall> = oci_bind_by_name(<fuzzresource>, <fuzzstring>, <fuzzmixed>)
<functioncall> = oci_bind_by_name(<fuzzresource>, <fuzzstring>, <fuzzmixed>, <fuzznumber>)
<functioncall> = oci_bind_by_name(<fuzzresource>, <fuzzstring>, <fuzzmixed>, <fuzznumber>, <fuzznumber>)
<functioncall> = oci_bind_array_by_name(<fuzzresource>, <fuzzstring>, <fuzzmixed>, <fuzznumber>)
<functioncall> = oci_bind_array_by_name(<fuzzresource>, <fuzzstring>, <fuzzmixed>, <fuzznumber>, <fuzznumber>)
<functioncall> = oci_bind_array_by_name(<fuzzresource>, <fuzzstring>, <fuzzmixed>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = oci_lob_copy(<fuzzobject>, <fuzzobject>, <fuzznumber>)
<functioncall> = oci_lob_is_equal(<fuzzobject>, <fuzzobject>)
<functioncall> = oci_new_descriptor(<fuzzresource>, <fuzznumber>)
<functioncall> = oci_rollback(<fuzzresource>)
<functioncall> = oci_commit(<fuzzresource>)
<functioncall> = oci_execute(<fuzzresource>)
<functioncall> = oci_execute(<fuzzresource>, <fuzznumber>)
<functioncall> = oci_cancel(<fuzzresource>)
<functioncall> = oci_fetch(<fuzzresource>)
<functioncall> = oci_fetch_all(<fuzzresource>, <fuzzmixed>)
<functioncall> = oci_fetch_all(<fuzzresource>, <fuzzmixed>, <fuzznumber>)
<functioncall> = oci_fetch_all(<fuzzresource>, <fuzzmixed>, <fuzznumber>, <fuzznumber>)
<functioncall> = oci_fetch_all(<fuzzresource>, <fuzzmixed>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = oci_free_statement(<fuzzresource>)
<functioncall> = oci_close(<fuzzresource>)
<functioncall> = oci_error()
<functioncall> = oci_error(<fuzzresource>)
<functioncall> = oci_num_fields(<fuzzresource>)
<functioncall> = oci_parse(<fuzzresource>, <fuzzstring>)
<functioncall> = oci_set_prefetch(<fuzzresource>, <fuzznumber>)
<functioncall> = oci_set_client_identifier(<fuzzresource>, <fuzzstring>)
<functioncall> = oci_set_edition(<fuzzstring>)
<functioncall> = oci_set_module_name(<fuzzresource>, <fuzzstring>)
<functioncall> = oci_set_action(<fuzzresource>, <fuzzstring>)
<functioncall> = oci_set_client_info(<fuzzresource>, <fuzzstring>)
<functioncall> = oci_set_db_operation(<fuzzresource>, <fuzzstring>)
<functioncall> = oci_set_call_timeout(<fuzzresource>, <fuzznumber>)
<functioncall> = oci_new_cursor(<fuzzresource>)
<functioncall> = oci_client_version()
<functioncall> = oci_server_version(<fuzzresource>)
<functioncall> = oci_statement_type(<fuzzresource>)
<functioncall> = oci_num_rows(<fuzzresource>)
<functioncall> = oci_new_collection(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = oci_get_implicit_resultset(<fuzzresource>)
<functioncall> = variant_date_from_timestamp(<fuzznumber>)
<functioncall> = com_get_active_object(<fuzzstring>, <fuzznumber>)
<functioncall> = com_event_sink(<fuzzobject>, <fuzzobject>, <fuzzref>)
<functioncall> = com_print_typeinfo(<fuzzref>, <fuzzstring>)
<functioncall> = com_print_typeinfo(<fuzzref>, <fuzzstring>, <fuzzbool>)
<functioncall> = com_message_pump(<fuzznumber>)
<functioncall> = com_load_typelib(<fuzzstring>, <fuzzbool>)
<methodcall> = <obj_dotnet>->__construct(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = mb_language(<fuzzstring>)
<functioncall> = mb_internal_encoding(<fuzzstring>)
<functioncall> = mb_http_input(<fuzzstring>)
<functioncall> = mb_http_output(<fuzzstring>)
<functioncall> = mb_detect_order()
<functioncall> = mb_detect_order(<fuzzstring|array>)
<functioncall> = mb_substitute_character()
<functioncall> = mb_substitute_character(<fuzzstring|number>)
<functioncall> = mb_preferred_mime_name(<fuzzstring>)
<functioncall> = mb_parse_str(<fuzzstring>, <fuzzref>)
<functioncall> = mb_output_handler(<fuzzstring>, <fuzznumber>)
<functioncall> = mb_str_split(<fuzzstring>)
<functioncall> = mb_str_split(<fuzzstring>, <fuzznumber>)
<functioncall> = mb_str_split(<fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = mb_strlen(<fuzzstring>)
<functioncall> = mb_strlen(<fuzzstring>, <fuzzstring>)
<functioncall> = mb_strpos(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = mb_strpos(<fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = mb_strrpos(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = mb_strrpos(<fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = mb_stripos(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = mb_stripos(<fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = mb_strripos(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = mb_strripos(<fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = mb_substr_count(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = mb_substr(<fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = mb_substr(<fuzzstring>, <fuzznumber>, <fuzznumber>, <fuzzstring>)
<functioncall> = mb_strcut(<fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = mb_strcut(<fuzzstring>, <fuzznumber>, <fuzznumber>, <fuzzstring>)
<functioncall> = mb_strwidth(<fuzzstring>, <fuzzstring>)
<functioncall> = mb_strimwidth(<fuzzstring>, <fuzznumber>, <fuzznumber>, <fuzzstring>)
<functioncall> = mb_strimwidth(<fuzzstring>, <fuzznumber>, <fuzznumber>, <fuzzstring>, <fuzzstring>)
<functioncall> = mb_convert_encoding(<fuzzstring|array>, <fuzzstring>)
<functioncall> = mb_convert_encoding(<fuzzstring|array>, <fuzzstring>, <fuzzstring|array>)
<functioncall> = mb_convert_case(<fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = mb_strtoupper(<fuzzstring>, <fuzzstring>)
<functioncall> = mb_strtolower(<fuzzstring>, <fuzzstring>)
<functioncall> = mb_detect_encoding(<fuzzstring>)
<functioncall> = mb_detect_encoding(<fuzzstring>, <fuzzstring|array>)
<functioncall> = mb_detect_encoding(<fuzzstring>, <fuzzstring|array>, <fuzzbool>)
<functioncall> = mb_encoding_aliases(<fuzzstring>)
<functioncall> = mb_encode_mimeheader(<fuzzstring>, <fuzzstring>)
<functioncall> = mb_encode_mimeheader(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = mb_encode_mimeheader(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = mb_encode_mimeheader(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = mb_decode_mimeheader(<fuzzstring>)
<functioncall> = mb_convert_kana(<fuzzstring>, <fuzzstring>)
<functioncall> = mb_convert_kana(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = mb_convert_variables(<fuzzstring>, <fuzzstring|array>, <fuzzvariadic>)
<functioncall> = mb_send_mail(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzref>)
<functioncall> = mb_send_mail(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzref>, <fuzzstring>)
<functioncall> = mb_get_info(<fuzzstring>)
<functioncall> = mb_check_encoding()
<functioncall> = mb_check_encoding(<fuzzstring|array>)
<functioncall> = mb_check_encoding(<fuzzstring|array>, <fuzzstring>)
<functioncall> = mb_ord(<fuzzstring>)
<functioncall> = mb_ord(<fuzzstring>, <fuzzstring>)
<functioncall> = mb_chr(<fuzznumber>)
<functioncall> = mb_chr(<fuzznumber>, <fuzzstring>)
<functioncall> = mb_scrub(<fuzzstring>)
<functioncall> = mb_scrub(<fuzzstring>, <fuzzstring>)
<functioncall> = mb_regex_encoding(<fuzzstring>)
<functioncall> = mb_split(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = mb_ereg_match(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = mb_ereg_search_init(<fuzzstring>, <fuzzstring>)
<functioncall> = mb_ereg_search_init(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = mb_ereg_search_setpos(<fuzznumber>)
<functioncall> = mb_regex_set_options(<fuzzstring>)
<functioncall> = tidy_parse_string(<fuzzstring>, <fuzzref>)
<functioncall> = tidy_parse_string(<fuzzstring>, <fuzzref>, <fuzzstring>)
<functioncall> = tidy_parse_file(<fuzzpath>, <fuzzref>)
<functioncall> = tidy_parse_file(<fuzzpath>, <fuzzref>, <fuzzstring>)
<functioncall> = tidy_parse_file(<fuzzpath>, <fuzzref>, <fuzzstring>, <fuzzbool>)
<methodcall> = <obj_tidy>->__construct(<fuzzpath>)
<methodcall> = <obj_tidy>->__construct(<fuzzpath>, <fuzzref>)
<methodcall> = <obj_tidy>->__construct(<fuzzpath>, <fuzzref>, <fuzzstring>)
<methodcall> = <obj_tidy>->__construct(<fuzzpath>, <fuzzref>, <fuzzstring>, <fuzzbool>)
<methodcall> = <obj_tidy>->parseFile(<fuzzpath>, <fuzzref>)
<methodcall> = <obj_tidy>->parseFile(<fuzzpath>, <fuzzref>, <fuzzstring>)
<methodcall> = <obj_tidy>->parseFile(<fuzzpath>, <fuzzref>, <fuzzstring>, <fuzzbool>)
<methodcall> = <obj_tidy>->parseString(<fuzzstring>, <fuzzref>)
<methodcall> = <obj_tidy>->parseString(<fuzzstring>, <fuzzref>, <fuzzstring>)
<methodcall> = <obj_mysqli_warning>->__construct(<fuzzobject>)
<functioncall> = mysqli_poll(<fuzzarray>, <fuzzarray>, <fuzzarray>, <fuzznumber>, <fuzznumber>)
<functioncall> = mysqli_report(<fuzznumber>)
<methodcall> = <obj_mysqli_stmt>->__construct(<fuzzobject>, <fuzzstring>)
<methodcall> = <obj_mysqli_result>->__construct(<fuzzobject>, <fuzznumber>)
<functioncall> = mysqli_debug(<fuzzstring>)
<functioncall> = mysqli_get_client_info(<fuzzobject>)
<methodcall> = <obj_PhpToken>->getAll(<fuzzstring>)
<methodcall> = <obj_PhpToken>->getAll(<fuzzstring>, <fuzznumber>)
<methodcall> = <obj_PhpToken>->__construct(<fuzznumber>, <fuzzstring>)
<methodcall> = <obj_PhpToken>->__construct(<fuzznumber>, <fuzzstring>, <fuzznumber>)
<methodcall> = <obj_PhpToken>->__construct(<fuzznumber>, <fuzzstring>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_PhpToken>->is(<fuzzmixed>)
<functioncall> = isIgnorable()
<functioncall> = getTokenName()
<functioncall> = __toString()
<functioncall> = token_get_all(<fuzzstring>)
<functioncall> = token_get_all(<fuzzstring>, <fuzznumber>)
<functioncall> = token_name(<fuzznumber>)
<functioncall> = pdo_drivers()
<methodcall> = <obj_PDO>->__construct(<fuzzstring>)
<methodcall> = <obj_PDO>->__construct(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_PDO>->__construct(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_PDO>->__construct(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzarray>)
<methodcall> = <obj_PDO>->prepare(<fuzzstring>)
<methodcall> = <obj_PDO>->prepare(<fuzzstring>, <fuzzarray>)
<functioncall> = beginTransaction()
<functioncall> = commit()
<functioncall> = rollBack()
<functioncall> = inTransaction()
<methodcall> = <obj_PDO>->setAttribute(<fuzznumber>, <fuzzmixed>)
<methodcall> = <obj_PDO>->getAttribute(<fuzznumber>)
<methodcall> = <obj_PDO>->exec(<fuzzstring>)
<methodcall> = <obj_PDO>->lastInsertId()
<methodcall> = <obj_PDO>->lastInsertId(<fuzzstring>)
<functioncall> = errorCode()
<functioncall> = errorInfo()
<methodcall> = <obj_PDO>->query(<fuzzstring>, <fuzznumber>)
<methodcall> = <obj_PDO>->query(<fuzzstring>, <fuzznumber>)
<methodcall> = <obj_PDO>->quote(<fuzzstring>)
<methodcall> = <obj_PDO>->quote(<fuzzstring>, <fuzznumber>)
<functioncall> = getAvailableDrivers()
<methodcall> = <obj_PDOStatement>->execute()
<methodcall> = <obj_PDOStatement>->execute(<fuzzarray>)
<methodcall> = <obj_PDOStatement>->fetch()
<methodcall> = <obj_PDOStatement>->fetch(<fuzznumber>)
<methodcall> = <obj_PDOStatement>->fetch(<fuzznumber>, <fuzznumber>)
<methodcall> = <obj_PDOStatement>->fetch(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_PDOStatement>->fetchObject()
<methodcall> = <obj_PDOStatement>->fetchObject(<fuzzclass>)
<methodcall> = <obj_PDOStatement>->fetchObject(<fuzzclass>, <fuzzarray>)
<methodcall> = <obj_PDOStatement>->fetchColumn()
<methodcall> = <obj_PDOStatement>->fetchColumn(<fuzznumber>)
<methodcall> = <obj_PDOStatement>->fetchAll()
<methodcall> = <obj_PDOStatement>->fetchAll(<fuzznumber>)
<methodcall> = <obj_PDOStatement>->fetchAll(<fuzznumber>, <fuzzmixed>)
<methodcall> = <obj_PDOStatement>->fetchAll(<fuzznumber>, <fuzzmixed>, <fuzzmixed>)
<methodcall> = <obj_PDOStatement>->bindValue(<fuzzstring|number>, <fuzzmixed>)
<methodcall> = <obj_PDOStatement>->bindValue(<fuzzstring|number>, <fuzzmixed>, <fuzznumber>)
<functioncall> = rowCount()
<functioncall> = errorCode()
<functioncall> = errorInfo()
<methodcall> = <obj_PDOStatement>->setAttribute(<fuzznumber>, <fuzzmixed>)
<methodcall> = <obj_PDOStatement>->getAttribute(<fuzznumber>)
<functioncall> = columnCount()
<methodcall> = <obj_PDOStatement>->getColumnMeta(<fuzznumber>)
<methodcall> = <obj_PDOStatement>->setFetchMode(<fuzznumber>)
<functioncall> = nextRowset()
<functioncall> = closeCursor()
<functioncall> = debugDumpParams()
<functioncall> = debugDumpParams()
<functioncall> = shmop_open(<fuzznumber>, <fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = shmop_read(<fuzzobject>, <fuzznumber>, <fuzznumber>)
<functioncall> = shmop_close(<fuzzobject>)
<functioncall> = shmop_size(<fuzzobject>)
<functioncall> = shmop_write(<fuzzobject>, <fuzzstring>, <fuzznumber>)
<functioncall> = shmop_delete(<fuzzobject>)
<functioncall> = hash(<fuzzstring>, <fuzzstring>)
<functioncall> = hash(<fuzzstring>, <fuzzstring>, <fuzzbool>)
<functioncall> = hash_file(<fuzzstring>, <fuzzstring>)
<functioncall> = hash_file(<fuzzstring>, <fuzzstring>, <fuzzbool>)
<functioncall> = hash_hmac(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzbool>)
<functioncall> = hash_hmac_file(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzbool>)
<functioncall> = hash_init(<fuzzstring>, <fuzznumber>)
<functioncall> = hash_init(<fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = hash_update(<fuzzobject>, <fuzzstring>)
<functioncall> = hash_update_stream(<fuzzobject>, <fuzzresource>, <fuzznumber>)
<functioncall> = hash_update_file(<fuzzobject>, <fuzzpath>, <fuzzresource>)
<functioncall> = hash_final(<fuzzobject>, <fuzzbool>)
<functioncall> = hash_copy(<fuzzobject>)
<functioncall> = hash_hkdf(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = hash_hkdf(<fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = hash_hkdf(<fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzzstring>, <fuzzstring>)
<functioncall> = hash_pbkdf2(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = hash_pbkdf2(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzznumber>, <fuzzbool>)
<functioncall> = hash_equals(<fuzzref>, <fuzzref>)
<functioncall> = mhash(<fuzznumber>, <fuzzstring>, <fuzzstring>)
<functioncall> = mhash_get_hash_name(<fuzznumber>)
<functioncall> = mhash_get_block_size(<fuzznumber>)
<functioncall> = mhash_keygen_s2k(<fuzznumber>, <fuzzstring>, <fuzzstring>, <fuzznumber>)
<methodcall> = <obj_HashContext>->__unserialize(<fuzzarray>)
<functioncall> = ldap_connect(<fuzzstring>)
<functioncall> = ldap_connect(<fuzzstring>, <fuzznumber>)
<functioncall> = ldap_connect(<fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = ldap_connect(<fuzzstring>, <fuzznumber>, <fuzzstring>, <fuzzstring>)
<functioncall> = ldap_connect(<fuzzstring>, <fuzznumber>, <fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = ldap_bind(<fuzzresource>, <fuzzstring>)
<functioncall> = ldap_bind(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = ldap_bind_ext(<fuzzresource>, <fuzzstring>)
<functioncall> = ldap_bind_ext(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = ldap_bind_ext(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzarray>)
<functioncall> = ldap_sasl_bind(<fuzzresource>, <fuzzstring>)
<functioncall> = ldap_sasl_bind(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = ldap_sasl_bind(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = ldap_sasl_bind(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = ldap_sasl_bind(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = ldap_sasl_bind(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = ldap_sasl_bind(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = ldap_unbind(<fuzzresource>)
<functioncall> = ldap_free_result(<fuzzresource>)
<functioncall> = ldap_count_entries(<fuzzresource>, <fuzzresource>)
<functioncall> = ldap_first_entry(<fuzzresource>, <fuzzresource>)
<functioncall> = ldap_next_entry(<fuzzresource>, <fuzzresource>)
<functioncall> = ldap_get_entries(<fuzzresource>, <fuzzresource>)
<functioncall> = ldap_first_attribute(<fuzzresource>, <fuzzresource>, <fuzznumber>)
<functioncall> = ldap_next_attribute(<fuzzresource>, <fuzzresource>, <fuzznumber>)
<functioncall> = ldap_get_attributes(<fuzzresource>, <fuzzresource>)
<functioncall> = ldap_get_values_len(<fuzzresource>, <fuzzresource>, <fuzzstring>)
<functioncall> = ldap_get_dn(<fuzzresource>, <fuzzresource>)
<functioncall> = ldap_explode_dn(<fuzzstring>, <fuzznumber>)
<functioncall> = ldap_dn2ufn(<fuzzstring>)
<functioncall> = ldap_modify_batch(<fuzzresource>, <fuzzstring>, <fuzzarray>, <fuzzarray>)
<functioncall> = ldap_errno(<fuzzresource>)
<functioncall> = ldap_err2str(<fuzznumber>)
<functioncall> = ldap_error(<fuzzresource>)
<functioncall> = ldap_compare(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzarray>)
<functioncall> = ldap_get_option(<fuzzresource>, <fuzznumber>, <fuzzref>)
<functioncall> = ldap_set_option(<fuzzref>, <fuzznumber>, <fuzzref>)
<functioncall> = ldap_parse_result(<fuzzresource>, <fuzzresource>, <fuzzref>, <fuzzref>)
<functioncall> = ldap_parse_result(<fuzzresource>, <fuzzresource>, <fuzzref>, <fuzzref>, <fuzzref>)
<functioncall> = ldap_parse_result(<fuzzresource>, <fuzzresource>, <fuzzref>, <fuzzref>, <fuzzref>, <fuzzref>)
<functioncall> = ldap_parse_result(<fuzzresource>, <fuzzresource>, <fuzzref>, <fuzzref>, <fuzzref>, <fuzzref>, <fuzzref>)
<functioncall> = ldap_parse_exop(<fuzzresource>, <fuzzresource>, <fuzzref>)
<functioncall> = ldap_parse_exop(<fuzzresource>, <fuzzresource>, <fuzzref>, <fuzzref>)
<functioncall> = ldap_count_references(<fuzzresource>, <fuzzresource>)
<functioncall> = ldap_first_reference(<fuzzresource>, <fuzzresource>)
<functioncall> = ldap_next_reference(<fuzzresource>, <fuzzresource>)
<functioncall> = ldap_parse_reference(<fuzzresource>, <fuzzresource>, <fuzzref>)
<functioncall> = ldap_start_tls(<fuzzresource>)
<functioncall> = ldap_set_rebind_proc(<fuzzresource>, <fuzzfunction>)
<functioncall> = ldap_escape(<fuzzstring>, <fuzzstring>)
<functioncall> = ldap_escape(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = ldap_control_paged_result(<fuzzresource>, <fuzznumber>, <fuzzbool>)
<functioncall> = ldap_control_paged_result(<fuzzresource>, <fuzznumber>, <fuzzbool>, <fuzzstring>)
<functioncall> = ldap_control_paged_result_response(<fuzzresource>, <fuzzresource>, <fuzzref>)
<functioncall> = ldap_control_paged_result_response(<fuzzresource>, <fuzzresource>, <fuzzref>, <fuzzref>)
<functioncall> = ldap_exop(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = ldap_exop(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzarray>)
<functioncall> = ldap_exop(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzarray>, <fuzzref>)
<functioncall> = ldap_exop(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzarray>, <fuzzref>, <fuzzref>)
<functioncall> = ldap_exop_passwd(<fuzzresource>, <fuzzstring>)
<functioncall> = ldap_exop_passwd(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = ldap_exop_passwd(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = ldap_exop_passwd(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzref>)
<functioncall> = ldap_exop_whoami(<fuzzresource>)
<functioncall> = ldap_exop_refresh(<fuzzresource>, <fuzzstring>, <fuzznumber>)
<functioncall> = preg_replace_callback(<fuzzstring|array>, <fuzzfunction>, <fuzzstring|array>)
<functioncall> = preg_replace_callback(<fuzzstring|array>, <fuzzfunction>, <fuzzstring|array>, <fuzznumber>)
<functioncall> = preg_replace_callback(<fuzzstring|array>, <fuzzfunction>, <fuzzstring|array>, <fuzznumber>, <fuzzmixed>)
<functioncall> = preg_replace_callback(<fuzzstring|array>, <fuzzfunction>, <fuzzstring|array>, <fuzznumber>, <fuzzmixed>, <fuzznumber>)
<functioncall> = preg_replace_callback_array(<fuzzarray>, <fuzzmixed>)
<functioncall> = preg_replace_callback_array(<fuzzarray>, <fuzzmixed>, <fuzznumber>)
<functioncall> = preg_replace_callback_array(<fuzzarray>, <fuzzmixed>, <fuzznumber>, <fuzzmixed>)
<functioncall> = preg_replace_callback_array(<fuzzarray>, <fuzzmixed>, <fuzznumber>, <fuzzmixed>, <fuzznumber>)
<functioncall> = preg_split(<fuzzstring>, <fuzzstring>)
<functioncall> = preg_split(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = preg_split(<fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = preg_quote(<fuzzstring>)
<functioncall> = preg_quote(<fuzzstring>, <fuzzstring>)
<functioncall> = preg_grep(<fuzzstring>, <fuzzarray>)
<functioncall> = preg_grep(<fuzzstring>, <fuzzarray>, <fuzznumber>)
<functioncall> = preg_last_error()
<functioncall> = preg_last_error_msg()
<functioncall> = cal_info(<fuzznumber>)
<functioncall> = cal_days_in_month(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = cal_to_jd(<fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = cal_from_jd(<fuzznumber>, <fuzznumber>)
<functioncall> = jdtogregorian(<fuzznumber>)
<functioncall> = gregoriantojd(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = jdtojulian(<fuzznumber>)
<functioncall> = juliantojd(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = jdtojewish(<fuzznumber>, <fuzzbool>)
<functioncall> = jdtojewish(<fuzznumber>, <fuzzbool>, <fuzznumber>)
<functioncall> = jewishtojd(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = jdtofrench(<fuzznumber>)
<functioncall> = frenchtojd(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = jddayofweek(<fuzznumber>, <fuzznumber>)
<functioncall> = jdmonthname(<fuzznumber>, <fuzznumber>)
<functioncall> = unixtojd(<fuzznumber>)
<functioncall> = jdtounix(<fuzznumber>)
<functioncall> = idate(<fuzzstring>)
<functioncall> = idate(<fuzzstring>, <fuzznumber>)
<functioncall> = strtotime(<fuzzstring>)
<functioncall> = strtotime(<fuzzstring>, <fuzznumber>)
<functioncall> = checkdate(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = time()
<functioncall> = localtime()
<functioncall> = localtime(<fuzznumber>)
<functioncall> = localtime(<fuzznumber>, <fuzzbool>)
<functioncall> = getdate()
<functioncall> = getdate(<fuzznumber>)
<functioncall> = date_create()
<functioncall> = date_create(<fuzzstring>)
<functioncall> = date_create(<fuzzstring>, <fuzzobject>)
<functioncall> = date_create_immutable()
<functioncall> = date_create_immutable(<fuzzstring>)
<functioncall> = date_create_immutable(<fuzzstring>, <fuzzobject>)
<functioncall> = date_create_from_format(<fuzzstring>, <fuzzstring>)
<functioncall> = date_create_from_format(<fuzzstring>, <fuzzstring>, <fuzzobject>)
<functioncall> = date_create_immutable_from_format(<fuzzstring>, <fuzzstring>)
<functioncall> = date_create_immutable_from_format(<fuzzstring>, <fuzzstring>, <fuzzobject>)
<methodcall> = <obj_DateTime>->__construct()
<methodcall> = <obj_DateTime>->__construct(<fuzzstring>)
<methodcall> = <obj_DateTime>->__construct(<fuzzstring>, <fuzzobject>)
<methodcall> = <obj_DateTimeImmutable>->__construct()
<methodcall> = <obj_DateTimeImmutable>->__construct(<fuzzstring>)
<methodcall> = <obj_DateTimeImmutable>->__construct(<fuzzstring>, <fuzzobject>)
<methodcall> = <obj_DateTime>->createFromImmutable(<fuzzobject>)
<methodcall> = <obj_DateTime>->createFromInterface(<fuzzobject>)
<methodcall> = <obj_DateTimeImmutable>->createFromMutable(<fuzzobject>)
<methodcall> = <obj_DateTimeImmutable>->createFromInterface(<fuzzobject>)
<methodcall> = <obj_DateTime>->__set_state(<fuzzarray>)
<methodcall> = <obj_DateTimeImmutable>->__set_state(<fuzzarray>)
<functioncall> = __wakeup()
<functioncall> = __wakeup()
<functioncall> = date_get_last_errors()
<functioncall> = date_parse(<fuzzstring>)
<functioncall> = date_parse_from_format(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_DateTimeImmutable>->modify(<fuzzstring>)
<methodcall> = <obj_DateTimeImmutable>->add(<fuzzobject>)
<methodcall> = <obj_DateTimeImmutable>->sub(<fuzzobject>)
<methodcall> = <obj_DateTimeImmutable>->setTimezone(<fuzzobject>)
<methodcall> = <obj_DateTimeImmutable>->setTime(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_DateTimeImmutable>->setTime(<fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_DateTimeImmutable>->setDate(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_DateTimeImmutable>->setISODate(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_DateTimeImmutable>->setTimestamp(<fuzznumber>)
<functioncall> = timezone_open(<fuzzstring>)
<methodcall> = <obj_DateTimeZone>->__construct(<fuzzstring>)
<methodcall> = <obj_DateTimeZone>->__set_state(<fuzzarray>)
<functioncall> = __wakeup()
<functioncall> = timezone_name_from_abbr(<fuzzstring>)
<functioncall> = timezone_name_from_abbr(<fuzzstring>, <fuzznumber>)
<functioncall> = timezone_name_from_abbr(<fuzzstring>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_DateInterval>->__construct(<fuzzstring>)
<methodcall> = <obj_DateInterval>->__set_state(<fuzzarray>)
<functioncall> = __wakeup()
<functioncall> = date_interval_create_from_date_string(<fuzzstring>)
<functioncall> = getStartDate()
<functioncall> = getEndDate()
<functioncall> = getDateInterval()
<functioncall> = getRecurrences()
<functioncall> = getIterator()
<functioncall> = timezone_identifiers_list()
<functioncall> = timezone_identifiers_list(<fuzznumber>)
<functioncall> = timezone_identifiers_list(<fuzznumber>, <fuzzstring>)
<functioncall> = timezone_version_get()
<functioncall> = timezone_abbreviations_list()
<functioncall> = date_default_timezone_set(<fuzzstring>)
<functioncall> = date_default_timezone_get()
<functioncall> = date_sun_info(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_DatePeriod>->__set_state(<fuzzarray>)
<functioncall> = __wakeup()
<functioncall> = imageloadfont(<fuzzpath>)
<functioncall> = imagesetstyle(<fuzzobject>, <fuzzarray>)
<functioncall> = imagecreatetruecolor(<fuzznumber>, <fuzznumber>)
<functioncall> = imageistruecolor(<fuzzobject>)
<functioncall> = imagetruecolortopalette(<fuzzobject>, <fuzzbool>, <fuzznumber>)
<functioncall> = imagepalettetotruecolor(<fuzzobject>)
<functioncall> = imagecolormatch(<fuzzobject>, <fuzzobject>)
<functioncall> = imagesetthickness(<fuzzobject>, <fuzznumber>)
<functioncall> = imagefilledellipse(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagefilledarc(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagealphablending(<fuzzobject>, <fuzzbool>)
<functioncall> = imagesavealpha(<fuzzobject>, <fuzzbool>)
<functioncall> = imagelayereffect(<fuzzobject>, <fuzznumber>)
<functioncall> = imagecolorallocatealpha(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagecolorresolvealpha(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagecolorclosestalpha(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagecolorexactalpha(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagecopyresampled(<fuzzobject>, <fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagegrabwindow(<fuzznumber>, <fuzznumber>)
<functioncall> = imagerotate(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagesettile(<fuzzobject>, <fuzzobject>)
<functioncall> = imagesetbrush(<fuzzobject>, <fuzzobject>)
<functioncall> = imagecreate(<fuzznumber>, <fuzznumber>)
<functioncall> = imagecreatefromstring(<fuzzstring>)
<functioncall> = imagexbm(<fuzzobject>, <fuzzpath>, <fuzznumber>)
<functioncall> = imagewbmp(<fuzzobject>, <fuzzref>)
<functioncall> = imagewbmp(<fuzzobject>, <fuzzref>, <fuzznumber>)
<functioncall> = imagebmp(<fuzzobject>, <fuzzref>)
<functioncall> = imagebmp(<fuzzobject>, <fuzzref>, <fuzzbool>)
<functioncall> = imagedestroy(<fuzzobject>)
<functioncall> = imagecolorallocate(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagepalettecopy(<fuzzobject>, <fuzzobject>)
<functioncall> = imagecolorat(<fuzzobject>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagecolorclosest(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagecolorclosesthwb(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagecolordeallocate(<fuzzobject>, <fuzznumber>)
<functioncall> = imagecolorresolve(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagecolorexact(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagecolorset(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagecolorsforindex(<fuzzobject>, <fuzznumber>)
<functioncall> = imagegammacorrect(<fuzzobject>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagesetpixel(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imageline(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagedashedline(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagerectangle(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagefilledrectangle(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagearc(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imageellipse(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagefilltoborder(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagefill(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagecolorstotal(<fuzzobject>)
<functioncall> = imagecolortransparent(<fuzzobject>, <fuzznumber>)
<functioncall> = imageinterlace(<fuzzobject>, <fuzznumber>)
<functioncall> = imagecopy(<fuzzobject>, <fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagecopymerge(<fuzzobject>, <fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagecopymergegray(<fuzzobject>, <fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagecopyresized(<fuzzobject>, <fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagesx(<fuzzobject>)
<functioncall> = imagesy(<fuzzobject>)
<functioncall> = imagesetclip(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagegetclip(<fuzzobject>)
<functioncall> = imagefilter(<fuzzobject>, <fuzznumber>)
<functioncall> = imageconvolution(<fuzzobject>, <fuzzarray>, <fuzznumber>, <fuzznumber>)
<functioncall> = imageflip(<fuzzobject>, <fuzznumber>)
<functioncall> = imageantialias(<fuzzobject>, <fuzzbool>)
<functioncall> = imagecrop(<fuzzobject>, <fuzzarray>)
<functioncall> = imagecropauto(<fuzzobject>, <fuzznumber>)
<functioncall> = imagecropauto(<fuzzobject>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagecropauto(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagescale(<fuzzobject>, <fuzznumber>, <fuzznumber>)
<functioncall> = imagescale(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = imageaffine(<fuzzobject>, <fuzzarray>, <fuzzarray>)
<functioncall> = imageaffinematrixget(<fuzznumber>, <fuzzref>)
<functioncall> = imageaffinematrixconcat(<fuzzarray>, <fuzzarray>)
<functioncall> = imagegetinterpolation(<fuzzobject>)
<functioncall> = imagesetinterpolation(<fuzzobject>, <fuzznumber>)
<functioncall> = imageresolution(<fuzzobject>, <fuzznumber>)
<functioncall> = imageresolution(<fuzzobject>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_PDO_SQLite_Ext>->sqliteCreateFunction(<fuzzstring>, <fuzzfunction>)
<methodcall> = <obj_PDO_SQLite_Ext>->sqliteCreateFunction(<fuzzstring>, <fuzzfunction>, <fuzznumber>)
<methodcall> = <obj_PDO_SQLite_Ext>->sqliteCreateFunction(<fuzzstring>, <fuzzfunction>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_PDO_SQLite_Ext>->sqliteCreateAggregate(<fuzzstring>, <fuzzfunction>, <fuzzfunction>)
<methodcall> = <obj_PDO_SQLite_Ext>->sqliteCreateAggregate(<fuzzstring>, <fuzzfunction>, <fuzzfunction>, <fuzznumber>)
<methodcall> = <obj_PDO_SQLite_Ext>->sqliteCreateCollation(<fuzzstring>, <fuzzfunction>)
<functioncall> = xmlwriter_open_uri(<fuzzpath>)
<functioncall> = pg_connect_poll(<fuzzresource>)
<functioncall> = pg_close(<fuzzresource>)
<functioncall> = pg_parameter_status(<fuzzstring>)
<functioncall> = pg_ping(<fuzzresource>)
<functioncall> = pg_query(<fuzzstring>)
<functioncall> = pg_query_params(<fuzzstring>, <fuzzarray>)
<functioncall> = pg_prepare(<fuzzstring>, <fuzzstring>)
<functioncall> = pg_execute(<fuzzstring>, <fuzzarray>)
<functioncall> = pg_last_notice(<fuzzresource>, <fuzznumber>)
<functioncall> = pg_field_table(<fuzzresource>, <fuzznumber>, <fuzzbool>)
<functioncall> = pg_field_num(<fuzzresource>, <fuzzstring>)
<functioncall> = pg_fetch_result(<fuzzresource>, <fuzzref>)
<functioncall> = pg_fetch_all(<fuzzresource>, <fuzznumber>)
<functioncall> = pg_fetch_all_columns(<fuzzresource>, <fuzznumber>)
<functioncall> = pg_result_seek(<fuzzresource>, <fuzznumber>)
<functioncall> = pg_free_result(<fuzzresource>)
<functioncall> = pg_last_oid(<fuzzresource>)
<functioncall> = pg_trace(<fuzzpath>, <fuzzstring>)
<functioncall> = pg_trace(<fuzzpath>, <fuzzstring>, <fuzzresource>)
<functioncall> = pg_untrace(<fuzzresource>)
<functioncall> = pg_lo_create(<fuzzref>)
<functioncall> = pg_lo_create(<fuzzref>, <fuzzref>)
<functioncall> = pg_lo_close(<fuzzresource>)
<functioncall> = pg_lo_read(<fuzzresource>, <fuzznumber>)
<functioncall> = pg_lo_write(<fuzzresource>, <fuzzstring>, <fuzznumber>)
<functioncall> = pg_lo_read_all(<fuzzresource>)
<functioncall> = pg_lo_seek(<fuzzresource>, <fuzznumber>, <fuzznumber>)
<functioncall> = pg_lo_tell(<fuzzresource>)
<functioncall> = pg_lo_truncate(<fuzzresource>, <fuzznumber>)
<functioncall> = pg_set_error_verbosity(<fuzznumber>)
<functioncall> = pg_set_client_encoding(<fuzzstring>)
<functioncall> = pg_client_encoding(<fuzzresource>)
<functioncall> = pg_end_copy(<fuzzresource>)
<functioncall> = pg_put_line(<fuzzstring>)
<functioncall> = pg_copy_to(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = pg_copy_to(<fuzzresource>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = pg_copy_from(<fuzzresource>, <fuzzstring>, <fuzzarray>, <fuzzstring>)
<functioncall> = pg_copy_from(<fuzzresource>, <fuzzstring>, <fuzzarray>, <fuzzstring>, <fuzzstring>)
<functioncall> = pg_escape_string(<fuzzstring>)
<functioncall> = pg_escape_bytea(<fuzzstring>)
<functioncall> = pg_unescape_bytea(<fuzzstring>)
<functioncall> = pg_result_error(<fuzzresource>)
<functioncall> = pg_result_error_field(<fuzzresource>, <fuzznumber>)
<functioncall> = pg_connection_status(<fuzzresource>)
<functioncall> = pg_transaction_status(<fuzzresource>)
<functioncall> = pg_connection_reset(<fuzzresource>)
<functioncall> = pg_send_query(<fuzzresource>, <fuzzstring>)
<functioncall> = pg_send_query_params(<fuzzresource>, <fuzzstring>, <fuzzarray>)
<functioncall> = pg_send_prepare(<fuzzresource>, <fuzzstring>, <fuzzstring>)
<functioncall> = pg_send_execute(<fuzzresource>, <fuzzstring>, <fuzzarray>)
<functioncall> = pg_get_result(<fuzzresource>)
<functioncall> = pg_result_status(<fuzzresource>, <fuzznumber>)
<functioncall> = pg_get_notify(<fuzzresource>, <fuzznumber>)
<functioncall> = pg_get_pid(<fuzzresource>)
<functioncall> = pg_socket(<fuzzresource>)
<functioncall> = pg_consume_input(<fuzzresource>)
<functioncall> = pg_flush(<fuzzresource>)
<functioncall> = pg_meta_data(<fuzzresource>, <fuzzstring>, <fuzzbool>)
<functioncall> = pg_insert(<fuzzresource>, <fuzzstring>, <fuzzarray>, <fuzznumber>)
<functioncall> = pg_update(<fuzzresource>, <fuzzstring>, <fuzzarray>, <fuzzarray>, <fuzznumber>)
<functioncall> = pg_delete(<fuzzresource>, <fuzzstring>, <fuzzarray>, <fuzznumber>)
<functioncall> = pg_select(<fuzzresource>, <fuzzstring>, <fuzzarray>, <fuzznumber>)
<functioncall> = socket_select(<fuzzarray>, <fuzzarray>, <fuzzarray>, <fuzznumber>, <fuzznumber>)
<functioncall> = socket_create_listen(<fuzznumber>, <fuzznumber>)
<functioncall> = socket_accept(<fuzzobject>)
<functioncall> = socket_set_nonblock(<fuzzobject>)
<functioncall> = socket_set_block(<fuzzobject>)
<functioncall> = socket_listen(<fuzzobject>, <fuzznumber>)
<functioncall> = socket_close(<fuzzobject>)
<functioncall> = socket_write(<fuzzobject>, <fuzzstring>, <fuzznumber>)
<functioncall> = socket_read(<fuzzobject>, <fuzznumber>, <fuzznumber>)
<functioncall> = socket_getsockname(<fuzzobject>, <fuzzref>, <fuzzref>)
<functioncall> = socket_getpeername(<fuzzobject>, <fuzzref>, <fuzzref>)
<functioncall> = socket_create(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = socket_connect(<fuzzobject>, <fuzzstring>, <fuzznumber>)
<functioncall> = socket_strerror(<fuzznumber>)
<functioncall> = socket_bind(<fuzzobject>, <fuzzstring>, <fuzznumber>)
<functioncall> = socket_recv(<fuzzobject>, <fuzzref>, <fuzznumber>, <fuzznumber>)
<functioncall> = socket_send(<fuzzobject>, <fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = socket_recvfrom(<fuzzobject>, <fuzzref>, <fuzznumber>, <fuzznumber>, <fuzzref>, <fuzzref>)
<functioncall> = socket_sendto(<fuzzobject>, <fuzzstring>, <fuzznumber>, <fuzznumber>, <fuzzstring>, <fuzznumber>)
<functioncall> = socket_get_option(<fuzzobject>, <fuzznumber>, <fuzznumber>)
<functioncall> = socket_set_option(<fuzzobject>, <fuzznumber>, <fuzznumber>, <fuzzref>)
<functioncall> = socket_create_pair(<fuzznumber>, <fuzznumber>, <fuzznumber>, <fuzzref>)
<functioncall> = socket_shutdown(<fuzzobject>, <fuzznumber>)
<functioncall> = socket_last_error(<fuzzobject>)
<functioncall> = socket_clear_error(<fuzzobject>)
<functioncall> = socket_import_stream(<fuzzresource>)
<functioncall> = socket_export_stream(<fuzzobject>)
<functioncall> = socket_addrinfo_lookup(<fuzzstring>, <fuzzstring>)
<functioncall> = socket_addrinfo_lookup(<fuzzstring>, <fuzzstring>, <fuzzarray>)
<functioncall> = socket_addrinfo_bind(<fuzzobject>)
<functioncall> = socket_addrinfo_connect(<fuzzobject>)
<functioncall> = socket_addrinfo_explain(<fuzzobject>)
<functioncall> = socket_wsaprotocol_info_export(<fuzzobject>, <fuzznumber>)
<functioncall> = socket_wsaprotocol_info_import(<fuzzstring>)
<functioncall> = socket_wsaprotocol_info_release(<fuzzstring>)
<functioncall> = socket_sendmsg(<fuzzobject>, <fuzzarray>, <fuzznumber>)
<functioncall> = socket_recvmsg(<fuzzobject>, <fuzzarray>, <fuzznumber>)
<functioncall> = socket_cmsg_space(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = json_encode(<fuzzmixed>)
<functioncall> = json_encode(<fuzzmixed>, <fuzznumber>)
<functioncall> = json_encode(<fuzzmixed>, <fuzznumber>, <fuzznumber>)
<functioncall> = json_decode(<fuzzstring>)
<functioncall> = json_decode(<fuzzstring>, <fuzzbool>)
<functioncall> = json_decode(<fuzzstring>, <fuzzbool>, <fuzznumber>)
<functioncall> = json_decode(<fuzzstring>, <fuzzbool>, <fuzznumber>, <fuzznumber>)
<functioncall> = json_last_error()
<functioncall> = json_last_error_msg()
<methodcall> = <obj_XMLReader>->getAttributeNo(<fuzznumber>)
<methodcall> = <obj_XMLReader>->getAttributeNs(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_XMLReader>->getParserProperty(<fuzznumber>)
<methodcall> = <obj_XMLReader>->moveToAttribute(<fuzzstring>)
<methodcall> = <obj_XMLReader>->moveToAttributeNo(<fuzznumber>)
<methodcall> = <obj_XMLReader>->moveToAttributeNs(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_XMLReader>->next(<fuzzstring>)
<methodcall> = <obj_XMLReader>->open(<fuzzpath>, <fuzzstring>)
<methodcall> = <obj_XMLReader>->open(<fuzzpath>, <fuzzstring>, <fuzznumber>)
<methodcall> = <obj_XMLReader>->setSchema(<fuzzpath>)
<methodcall> = <obj_XMLReader>->setParserProperty(<fuzznumber>, <fuzzbool>)
<methodcall> = <obj_XMLReader>->XML(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_XMLReader>->XML(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<methodcall> = <obj_XMLReader>->expand(<fuzzobject>)
<functioncall> = test1()
<functioncall> = test2()
<functioncall> = test2(<fuzzstring>)
<functioncall> = iconv_strlen(<fuzzstring>, <fuzzstring>)
<functioncall> = iconv_substr(<fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = iconv_substr(<fuzzstring>, <fuzznumber>, <fuzznumber>, <fuzzstring>)
<functioncall> = iconv_strpos(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = iconv_strpos(<fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = iconv_strrpos(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = iconv_mime_encode(<fuzzstring>, <fuzzstring>, <fuzzarray>)
<functioncall> = iconv_mime_decode(<fuzzstring>, <fuzznumber>)
<functioncall> = iconv_mime_decode(<fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = iconv_mime_decode_headers(<fuzzstring>, <fuzznumber>)
<functioncall> = iconv_mime_decode_headers(<fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = iconv(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = iconv_set_encoding(<fuzzstring>, <fuzzstring>)
<functioncall> = iconv_get_encoding(<fuzzstring>)
<methodcall> = <obj_SoapParam>->__construct(<fuzzref>, <fuzzstring>)
<methodcall> = <obj_SoapHeader>->__construct(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SoapHeader>->__construct(<fuzzstring>, <fuzzstring>, <fuzzmixed>)
<methodcall> = <obj_SoapHeader>->__construct(<fuzzstring>, <fuzzstring>, <fuzzmixed>, <fuzzbool>)
<methodcall> = <obj_SoapHeader>->__construct(<fuzzstring>, <fuzzstring>, <fuzzmixed>, <fuzzbool>, <fuzzstring|number>)
<methodcall> = <obj_SoapFault>->__construct(<fuzzstring|array>, <fuzzstring>)
<methodcall> = <obj_SoapFault>->__construct(<fuzzstring|array>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SoapFault>->__construct(<fuzzstring|array>, <fuzzstring>, <fuzzstring>, <fuzzmixed>)
<methodcall> = <obj_SoapFault>->__construct(<fuzzstring|array>, <fuzzstring>, <fuzzstring>, <fuzzmixed>, <fuzzstring>)
<methodcall> = <obj_SoapFault>->__construct(<fuzzstring|array>, <fuzzstring>, <fuzzstring>, <fuzzmixed>, <fuzzstring>, <fuzzmixed>)
<methodcall> = <obj_SoapVar>->__construct(<fuzzref>, <fuzznumber>, <fuzzstring>)
<methodcall> = <obj_SoapVar>->__construct(<fuzzref>, <fuzznumber>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SoapVar>->__construct(<fuzzref>, <fuzznumber>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SoapVar>->__construct(<fuzzref>, <fuzznumber>, <fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SoapServer>->__construct(<fuzzstring>, <fuzzarray>)
<methodcall> = <obj_SoapServer>->setPersistence(<fuzznumber>)
<methodcall> = <obj_SoapServer>->setClass(<fuzzstring>)
<methodcall> = <obj_SoapServer>->setObject(<fuzzobject>)
<methodcall> = <obj_SoapServer>->addFunction(<fuzzref>)
<methodcall> = <obj_SoapServer>->handle(<fuzzstring>)
<methodcall> = <obj_SoapServer>->fault(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SoapServer>->fault(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzref>)
<methodcall> = <obj_SoapServer>->fault(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzref>, <fuzzstring>)
<methodcall> = <obj_SoapServer>->addSoapHeader(<fuzzobject>)
<functioncall> = use_soap_error_handler(<fuzzbool>)
<functioncall> = is_soap_fault(<fuzzref>)
<methodcall> = <obj_SoapClient>->__construct(<fuzzstring>, <fuzzarray>)
<methodcall> = <obj_SoapClient>->__doRequest(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzznumber>)
<methodcall> = <obj_SoapClient>->__setCookie(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_SoapClient>->__setSoapHeaders(<fuzzref>)
<methodcall> = <obj_SoapClient>->__setLocation(<fuzzstring>)
<functioncall> = ob_gzhandler(<fuzzstring>, <fuzznumber>)
<functioncall> = gzfile(<fuzzpath>, <fuzznumber>)
<functioncall> = gzopen(<fuzzpath>, <fuzzstring>, <fuzznumber>)
<functioncall> = readgzfile(<fuzzpath>, <fuzznumber>)
<functioncall> = name(<fuzzstring>, <fuzznumber>)
<functioncall> = name(<fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = name(<fuzzstring>, <fuzznumber>)
<functioncall> = inflate_init(<fuzznumber>, <fuzzarray>)
<functioncall> = inflate_add(<fuzzobject>, <fuzzstring>, <fuzznumber>)
<functioncall> = inflate_get_status(<fuzzobject>)
<functioncall> = inflate_get_read_len(<fuzzobject>)
<functioncall> = deflate_init(<fuzznumber>, <fuzzarray>)
<functioncall> = deflate_add(<fuzzobject>, <fuzzstring>, <fuzznumber>)
<functioncall> = textdomain(<fuzzstring>)
<functioncall> = gettext(<fuzzstring>)
<functioncall> = dgettext(<fuzzstring>, <fuzzstring>)
<functioncall> = dcgettext(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = bindtextdomain(<fuzzstring>, <fuzzstring>)
<functioncall> = ngettext(<fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = dngettext(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = dcngettext(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzznumber>)
<functioncall> = bind_textdomain_codeset(<fuzzstring>, <fuzzstring>)
<functioncall> = dba_close(<fuzzresource>)
<functioncall> = dba_key_split(<fuzzstring>)
<functioncall> = dba_firstkey(<fuzzresource>)
<functioncall> = dba_nextkey(<fuzzresource>)
<functioncall> = dba_optimize(<fuzzresource>)
<functioncall> = dba_sync(<fuzzresource>)
<functioncall> = dba_handlers(<fuzzbool>)
<functioncall> = shm_attach(<fuzznumber>, <fuzznumber>)
<functioncall> = shm_attach(<fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = shm_detach(<fuzzobject>)
<functioncall> = shm_remove(<fuzzobject>)
<functioncall> = shm_put_var(<fuzzobject>, <fuzznumber>, <fuzzref>)
<functioncall> = shm_get_var(<fuzzobject>, <fuzznumber>)
<functioncall> = shm_has_var(<fuzzobject>, <fuzznumber>)
<functioncall> = shm_remove_var(<fuzzobject>, <fuzznumber>)
<functioncall> = xml_set_object(<fuzzobject>, <fuzzobject>)
<functioncall> = xml_set_element_handler(<fuzzobject>, <fuzzref>, <fuzzref>)
<functioncall> = xml_set_character_data_handler(<fuzzobject>, <fuzzref>)
<functioncall> = xml_set_processing_instruction_handler(<fuzzobject>, <fuzzref>)
<functioncall> = xml_set_default_handler(<fuzzobject>, <fuzzref>)
<functioncall> = xml_set_unparsed_entity_decl_handler(<fuzzobject>, <fuzzref>)
<functioncall> = xml_set_notation_decl_handler(<fuzzobject>, <fuzzref>)
<functioncall> = xml_set_external_entity_ref_handler(<fuzzobject>, <fuzzref>)
<functioncall> = xml_set_start_namespace_decl_handler(<fuzzobject>, <fuzzref>)
<functioncall> = xml_set_end_namespace_decl_handler(<fuzzobject>, <fuzzref>)
<functioncall> = xml_parse(<fuzzobject>, <fuzzstring>, <fuzzbool>)
<functioncall> = xml_parse_into_struct(<fuzzobject>, <fuzzstring>, <fuzzref>, <fuzzref>)
<functioncall> = xml_get_error_code(<fuzzobject>)
<functioncall> = xml_error_string(<fuzznumber>)
<functioncall> = xml_get_current_line_number(<fuzzobject>)
<functioncall> = xml_get_current_column_number(<fuzzobject>)
<functioncall> = xml_get_current_byte_index(<fuzzobject>)
<functioncall> = xml_parser_free(<fuzzobject>)
<functioncall> = xml_parser_set_option(<fuzzobject>, <fuzznumber>, <fuzzref>)
<functioncall> = xml_parser_get_option(<fuzzobject>, <fuzznumber>)
<methodcall> = <obj_PDO_PGSql_Ext>->pgsqlCopyFromArray(<fuzzstring>, <fuzzarray>, <fuzzstring>)
<methodcall> = <obj_PDO_PGSql_Ext>->pgsqlCopyFromArray(<fuzzstring>, <fuzzarray>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_PDO_PGSql_Ext>->pgsqlCopyFromArray(<fuzzstring>, <fuzzarray>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_PDO_PGSql_Ext>->pgsqlCopyFromFile(<fuzzstring>, <fuzzpath>, <fuzzstring>)
<methodcall> = <obj_PDO_PGSql_Ext>->pgsqlCopyFromFile(<fuzzstring>, <fuzzpath>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_PDO_PGSql_Ext>->pgsqlCopyFromFile(<fuzzstring>, <fuzzpath>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_PDO_PGSql_Ext>->pgsqlCopyToFile(<fuzzstring>, <fuzzpath>, <fuzzstring>)
<methodcall> = <obj_PDO_PGSql_Ext>->pgsqlCopyToFile(<fuzzstring>, <fuzzpath>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_PDO_PGSql_Ext>->pgsqlCopyToFile(<fuzzstring>, <fuzzpath>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_PDO_PGSql_Ext>->pgsqlCopyToArray(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_PDO_PGSql_Ext>->pgsqlCopyToArray(<fuzzstring>, <fuzzstring>, <fuzzstring>)
<methodcall> = <obj_PDO_PGSql_Ext>->pgsqlCopyToArray(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = pgsqlLOBCreate()
<methodcall> = <obj_PDO_PGSql_Ext>->pgsqlLOBOpen(<fuzzstring>, <fuzzstring>)
<methodcall> = <obj_PDO_PGSql_Ext>->pgsqlLOBUnlink(<fuzzstring>)
<methodcall> = <obj_PDO_PGSql_Ext>->pgsqlGetNotify(<fuzznumber>)
<methodcall> = <obj_PDO_PGSql_Ext>->pgsqlGetNotify(<fuzznumber>, <fuzznumber>)
<functioncall> = pgsqlGetPid()
<functioncall> = libxml_set_streams_context(<fuzzresource>)
<functioncall> = libxml_use_internal_errors()
<functioncall> = libxml_use_internal_errors(<fuzzbool>)
<functioncall> = libxml_get_last_error()
<functioncall> = libxml_get_errors()
<functioncall> = libxml_clear_errors()
<functioncall> = libxml_disable_entity_loader()
<functioncall> = libxml_disable_entity_loader(<fuzzbool>)
<functioncall> = libxml_set_external_entity_loader(<fuzzfunction>)
<functioncall> = openssl_x509_export_to_file(<fuzzstring|obj>, <fuzzpath>)
<functioncall> = openssl_x509_export_to_file(<fuzzstring|obj>, <fuzzpath>, <fuzzbool>)
<functioncall> = openssl_spki_new(<fuzzobject>, <fuzzstring>, <fuzznumber>)
<functioncall> = openssl_spki_verify(<fuzzstring>)
<functioncall> = openssl_spki_export(<fuzzstring>)
<functioncall> = openssl_spki_export_challenge(<fuzzstring>)
<functioncall> = openssl_x509_export(<fuzzstring|obj>, <fuzzmixed>)
<functioncall> = openssl_x509_export(<fuzzstring|obj>, <fuzzmixed>, <fuzzbool>)
<functioncall> = openssl_x509_fingerprint(<fuzzstring|obj>)
<functioncall> = openssl_x509_fingerprint(<fuzzstring|obj>, <fuzzstring>)
<functioncall> = openssl_x509_fingerprint(<fuzzstring|obj>, <fuzzstring>, <fuzzbool>)
<functioncall> = openssl_x509_check_private_key(<fuzzstring|obj>, <fuzzmixed>)
<functioncall> = openssl_x509_verify(<fuzzstring|obj>, <fuzzmixed>)
<functioncall> = openssl_x509_parse(<fuzzstring|obj>)
<functioncall> = openssl_x509_parse(<fuzzstring|obj>, <fuzzbool>)
<functioncall> = openssl_x509_checkpurpose(<fuzzstring|obj>, <fuzznumber>)
<functioncall> = openssl_x509_checkpurpose(<fuzzstring|obj>, <fuzznumber>, <fuzzarray>)
<functioncall> = openssl_x509_checkpurpose(<fuzzstring|obj>, <fuzznumber>, <fuzzarray>, <fuzzstring>)
<functioncall> = openssl_x509_read(<fuzzstring|obj>)
<functioncall> = openssl_x509_free(<fuzzobject>)
<functioncall> = openssl_pkcs12_export_to_file(<fuzzstring|obj>, <fuzzpath>, <fuzzmixed>, <fuzzstring>)
<functioncall> = openssl_pkcs12_export_to_file(<fuzzstring|obj>, <fuzzpath>, <fuzzmixed>, <fuzzstring>, <fuzzarray>)
<functioncall> = openssl_pkcs12_export(<fuzzstring|obj>, <fuzzmixed>, <fuzzmixed>, <fuzzstring>)
<functioncall> = openssl_pkcs12_export(<fuzzstring|obj>, <fuzzmixed>, <fuzzmixed>, <fuzzstring>, <fuzzarray>)
<functioncall> = openssl_pkcs12_read(<fuzzstring>, <fuzzref>, <fuzzstring>)
<functioncall> = openssl_csr_export_to_file(<fuzzstring|obj>, <fuzzpath>)
<functioncall> = openssl_csr_export_to_file(<fuzzstring|obj>, <fuzzpath>, <fuzzbool>)
<functioncall> = openssl_csr_export(<fuzzstring|obj>, <fuzzmixed>)
<functioncall> = openssl_csr_export(<fuzzstring|obj>, <fuzzmixed>, <fuzzbool>)
<functioncall> = openssl_csr_sign(<fuzzstring|obj>, <fuzzstring|obj>, <fuzzmixed>, <fuzznumber>)
<functioncall> = openssl_csr_sign(<fuzzstring|obj>, <fuzzstring|obj>, <fuzzmixed>, <fuzznumber>, <fuzzarray>)
<functioncall> = openssl_csr_sign(<fuzzstring|obj>, <fuzzstring|obj>, <fuzzmixed>, <fuzznumber>, <fuzzarray>, <fuzznumber>)
<functioncall> = openssl_csr_new(<fuzzarray>, <fuzzref>, <fuzzarray>)
<functioncall> = openssl_csr_new(<fuzzarray>, <fuzzref>, <fuzzarray>, <fuzzarray>)
<functioncall> = openssl_csr_get_subject(<fuzzstring|obj>)
<functioncall> = openssl_csr_get_subject(<fuzzstring|obj>, <fuzzbool>)
<functioncall> = openssl_csr_get_public_key(<fuzzstring|obj>)
<functioncall> = openssl_csr_get_public_key(<fuzzstring|obj>, <fuzzbool>)
<functioncall> = openssl_pkey_new(<fuzzarray>)
<functioncall> = openssl_pkey_export_to_file(<fuzzref>, <fuzzpath>, <fuzzstring>)
<functioncall> = openssl_pkey_export_to_file(<fuzzref>, <fuzzpath>, <fuzzstring>, <fuzzarray>)
<functioncall> = openssl_pkey_export(<fuzzref>, <fuzzref>, <fuzzstring>)
<functioncall> = openssl_pkey_export(<fuzzref>, <fuzzref>, <fuzzstring>, <fuzzarray>)
<functioncall> = openssl_pkey_get_public(<fuzzref>)
<functioncall> = openssl_pkey_free(<fuzzobject>)
<functioncall> = openssl_pkey_get_private(<fuzzref>, <fuzzstring>)
<functioncall> = openssl_pkey_get_details(<fuzzobject>)
<functioncall> = openssl_dh_compute_key(<fuzzstring>, <fuzzobject>)
<functioncall> = openssl_pkey_derive(<fuzzref>, <fuzzref>, <fuzznumber>)
<functioncall> = openssl_pbkdf2(<fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzznumber>, <fuzzstring>)
<functioncall> = openssl_pkcs7_verify(<fuzzpath>, <fuzznumber>, <fuzzpath>)
<functioncall> = openssl_pkcs7_verify(<fuzzpath>, <fuzznumber>, <fuzzpath>, <fuzzarray>)
<functioncall> = openssl_pkcs7_verify(<fuzzpath>, <fuzznumber>, <fuzzpath>, <fuzzarray>, <fuzzpath>)
<functioncall> = openssl_pkcs7_verify(<fuzzpath>, <fuzznumber>, <fuzzpath>, <fuzzarray>, <fuzzpath>, <fuzzpath>)
<functioncall> = openssl_pkcs7_verify(<fuzzpath>, <fuzznumber>, <fuzzpath>, <fuzzarray>, <fuzzpath>, <fuzzpath>, <fuzzpath>)
<functioncall> = openssl_pkcs7_encrypt(<fuzzpath>, <fuzzpath>, <fuzzref>, <fuzzarray>, <fuzznumber>)
<functioncall> = openssl_pkcs7_encrypt(<fuzzpath>, <fuzzpath>, <fuzzref>, <fuzzarray>, <fuzznumber>, <fuzznumber>)
<functioncall> = openssl_pkcs7_read(<fuzzstring>, <fuzzref>)
<functioncall> = openssl_pkcs7_sign(<fuzzpath>, <fuzzpath>, <fuzzstring|obj>, <fuzzmixed>, <fuzzarray>)
<functioncall> = openssl_pkcs7_sign(<fuzzpath>, <fuzzpath>, <fuzzstring|obj>, <fuzzmixed>, <fuzzarray>, <fuzznumber>)
<functioncall> = openssl_pkcs7_sign(<fuzzpath>, <fuzzpath>, <fuzzstring|obj>, <fuzzmixed>, <fuzzarray>, <fuzznumber>, <fuzzpath>)
<functioncall> = openssl_pkcs7_decrypt(<fuzzpath>, <fuzzpath>, <fuzzmixed>)
<functioncall> = openssl_pkcs7_decrypt(<fuzzpath>, <fuzzpath>, <fuzzmixed>, <fuzzmixed>)
<functioncall> = openssl_cms_verify(<fuzzpath>, <fuzznumber>, <fuzzpath>)
<functioncall> = openssl_cms_verify(<fuzzpath>, <fuzznumber>, <fuzzpath>, <fuzzarray>)
<functioncall> = openssl_cms_verify(<fuzzpath>, <fuzznumber>, <fuzzpath>, <fuzzarray>, <fuzzpath>)
<functioncall> = openssl_cms_verify(<fuzzpath>, <fuzznumber>, <fuzzpath>, <fuzzarray>, <fuzzpath>, <fuzzpath>)
<functioncall> = openssl_cms_verify(<fuzzpath>, <fuzznumber>, <fuzzpath>, <fuzzarray>, <fuzzpath>, <fuzzpath>, <fuzzpath>)
<functioncall> = openssl_cms_verify(<fuzzpath>, <fuzznumber>, <fuzzpath>, <fuzzarray>, <fuzzpath>, <fuzzpath>, <fuzzpath>, <fuzzpath>)
<functioncall> = openssl_cms_verify(<fuzzpath>, <fuzznumber>, <fuzzpath>, <fuzzarray>, <fuzzpath>, <fuzzpath>, <fuzzpath>, <fuzzpath>, <fuzznumber>)
<functioncall> = openssl_cms_encrypt(<fuzzpath>, <fuzzpath>, <fuzzref>, <fuzzarray>, <fuzznumber>)
<functioncall> = openssl_cms_encrypt(<fuzzpath>, <fuzzpath>, <fuzzref>, <fuzzarray>, <fuzznumber>, <fuzznumber>)
<functioncall> = openssl_cms_encrypt(<fuzzpath>, <fuzzpath>, <fuzzref>, <fuzzarray>, <fuzznumber>, <fuzznumber>, <fuzznumber>)
<functioncall> = openssl_cms_read(<fuzzstring>, <fuzzref>)
<functioncall> = openssl_cms_sign(<fuzzpath>, <fuzzpath>, <fuzzstring|obj>, <fuzzmixed>, <fuzzarray>)
<functioncall> = openssl_cms_sign(<fuzzpath>, <fuzzpath>, <fuzzstring|obj>, <fuzzmixed>, <fuzzarray>, <fuzznumber>)
<functioncall> = openssl_cms_sign(<fuzzpath>, <fuzzpath>, <fuzzstring|obj>, <fuzzmixed>, <fuzzarray>, <fuzznumber>, <fuzznumber>)
<functioncall> = openssl_cms_sign(<fuzzpath>, <fuzzpath>, <fuzzstring|obj>, <fuzzmixed>, <fuzzarray>, <fuzznumber>, <fuzznumber>, <fuzzpath>)
<functioncall> = openssl_cms_decrypt(<fuzzpath>, <fuzzpath>, <fuzzmixed>)
<functioncall> = openssl_cms_decrypt(<fuzzpath>, <fuzzpath>, <fuzzmixed>, <fuzzmixed>)
<functioncall> = openssl_cms_decrypt(<fuzzpath>, <fuzzpath>, <fuzzmixed>, <fuzzmixed>, <fuzznumber>)
<functioncall> = openssl_private_encrypt(<fuzzstring>, <fuzzref>, <fuzzref>, <fuzznumber>)
<functioncall> = openssl_private_decrypt(<fuzzstring>, <fuzzref>, <fuzzref>, <fuzznumber>)
<functioncall> = openssl_public_encrypt(<fuzzstring>, <fuzzref>, <fuzzref>, <fuzznumber>)
<functioncall> = openssl_public_decrypt(<fuzzstring>, <fuzzref>, <fuzzref>, <fuzznumber>)
<functioncall> = openssl_sign(<fuzzstring>, <fuzzref>, <fuzzref>, <fuzzref>)
<functioncall> = openssl_verify(<fuzzstring>, <fuzzstring>, <fuzzref>, <fuzzref>)
<functioncall> = openssl_seal(<fuzzstring>, <fuzzref>, <fuzzref>, <fuzzarray>, <fuzzstring>)
<functioncall> = openssl_seal(<fuzzstring>, <fuzzref>, <fuzzref>, <fuzzarray>, <fuzzstring>, <fuzzref>)
<functioncall> = openssl_open(<fuzzstring>, <fuzzref>, <fuzzstring>, <fuzzref>, <fuzzstring>)
<functioncall> = openssl_open(<fuzzstring>, <fuzzref>, <fuzzstring>, <fuzzref>, <fuzzstring>, <fuzzstring>)
<functioncall> = openssl_get_md_methods(<fuzzbool>)
<functioncall> = openssl_get_cipher_methods(<fuzzbool>)
<functioncall> = openssl_digest(<fuzzstring>, <fuzzstring>, <fuzzbool>)
<functioncall> = openssl_encrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = openssl_encrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = openssl_encrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzzstring>, <fuzzref>)
<functioncall> = openssl_encrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzzstring>, <fuzzref>, <fuzzstring>)
<functioncall> = openssl_encrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzzstring>, <fuzzref>, <fuzzstring>, <fuzznumber>)
<functioncall> = openssl_decrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>)
<functioncall> = openssl_decrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzzstring>)
<functioncall> = openssl_decrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzzstring>, <fuzzstring>)
<functioncall> = openssl_decrypt(<fuzzstring>, <fuzzstring>, <fuzzstring>, <fuzznumber>, <fuzzstring>, <fuzzstring>, <fuzzstring>)
<functioncall> = openssl_cipher_iv_length(<fuzzstring>)
<functioncall> = openssl_random_pseudo_bytes(<fuzznumber>, <fuzzref>)
<functioncall> = msg_set_queue(<fuzzobject>, <fuzzarray>)
<functioncall> = msg_stat_queue(<fuzzobject>)
<functioncall> = msg_queue_exists(<fuzznumber>)
<functioncall> = msg_get_queue(<fuzznumber>, <fuzznumber>)
<functioncall> = msg_remove_queue(<fuzzobject>)
<functioncall> = msg_receive(<fuzzobject>, <fuzznumber>, <fuzzref>, <fuzznumber>, <fuzzref>, <fuzzbool>)
<functioncall> = msg_receive(<fuzzobject>, <fuzznumber>, <fuzzref>, <fuzznumber>, <fuzzref>, <fuzzbool>, <fuzznumber>)
<functioncall> = msg_receive(<fuzzobject>, <fuzznumber>, <fuzzref>, <fuzznumber>, <fuzzref>, <fuzzbool>, <fuzznumber>, <fuzzref>)
<functioncall> = msg_send(<fuzzobject>, <fuzznumber>, <fuzzref>, <fuzzbool>)
<functioncall> = msg_send(<fuzzobject>, <fuzznumber>, <fuzzref>, <fuzzbool>, <fuzzbool>)
<functioncall> = msg_send(<fuzzobject>, <fuzznumber>, <fuzzref>, <fuzzbool>, <fuzzbool>, <fuzzref>)


<obj_tidyNode> = $vars["tidyNode"]
<obj_com> = $vars["com"]
<obj_SQLite3Result> = $vars["SQLite3Result"]
<obj_InfiniteIterator> = $vars["InfiniteIterator"]
<obj_DateTimeZone> = $vars["DateTimeZone"]
<obj_ArrayIterator> = $vars["ArrayIterator"]
<obj_tidy> = $vars["tidy"]
<obj_PDO> = $vars["PDO"]
<obj_SoapParam> = $vars["SoapParam"]
<obj_DOMElement> = $vars["DOMElement"]
<obj_SoapVar> = $vars["SoapVar"]
<obj_Phar> = $vars["Phar"]
<obj_dotnet> = $vars["dotnet"]
<obj_RecursiveRegexIterator> = $vars["RecursiveRegexIterator"]
<obj_COMPersistHelper> = $vars["COMPersistHelper"]
<obj_DOMAttr> = $vars["DOMAttr"]
<obj_DOMCdataSection> = $vars["DOMCdataSection"]
<obj_RecursiveDirectoryIterator> = $vars["RecursiveDirectoryIterator"]
<obj_PDO_SQLite_Ext> = $vars["PDO_SQLite_Ext"]
<obj_MultipleIterator> = $vars["MultipleIterator"]
<obj_DOMDocumentFragment> = $vars["DOMDocumentFragment"]
<obj_SplMaxHeap> = $vars["SplMaxHeap"]
<obj_RegexIterator> = $vars["RegexIterator"]
<obj_SplObjectStorage> = $vars["SplObjectStorage"]
<obj_DateTimeImmutable> = $vars["DateTimeImmutable"]
<obj_DOMNamedNodeMap> = $vars["DOMNamedNodeMap"]
<obj_ArrayObject> = $vars["ArrayObject"]
<obj_AppendIterator> = $vars["AppendIterator"]
<obj_SplHeap> = $vars["SplHeap"]
<obj_DOMText> = $vars["DOMText"]
<obj_FilterIterator> = $vars["FilterIterator"]
<obj_SplFileInfo> = $vars["SplFileInfo"]
<obj_SplDoublyLinkedList> = $vars["SplDoublyLinkedList"]
<obj_DateInterval> = $vars["DateInterval"]
<obj_XSLTProcessor> = $vars["XSLTProcessor"]
<obj_RecursiveCallbackFilterIterator> = $vars["RecursiveCallbackFilterIterator"]
<obj_SplMinHeap> = $vars["SplMinHeap"]
<obj_cname> = $vars["cname"]
<obj_SessionHandler> = $vars["SessionHandler"]
<obj_SplTempFileObject> = $vars["SplTempFileObject"]
<obj_PhpToken> = $vars["PhpToken"]
<obj_ZipArchive> = $vars["ZipArchive"]
<obj_DOMNodeList> = $vars["DOMNodeList"]
<obj_SplPriorityQueue> = $vars["SplPriorityQueue"]
<obj_RecursiveTreeIterator> = $vars["RecursiveTreeIterator"]
<obj_XMLReader> = $vars["XMLReader"]
<obj_SoapHeader> = $vars["SoapHeader"]
<obj_DOMImplementation> = $vars["DOMImplementation"]
<obj_SQLite3> = $vars["SQLite3"]
<obj_DOMEntityReference> = $vars["DOMEntityReference"]
<obj_SimpleXMLElement> = $vars["SimpleXMLElement"]
<obj_CallbackFilterIterator> = $vars["CallbackFilterIterator"]
<obj_mysqli> = $vars["mysqli"]
<obj_EmptyIterator> = $vars["EmptyIterator"]
<obj_SplFileObject> = $vars["SplFileObject"]
<obj_mysqli_warning> = $vars["mysqli_warning"]
<obj_DOMXPath> = $vars["DOMXPath"]
<obj_PDOStatement> = $vars["PDOStatement"]
<obj_SoapFault> = $vars["SoapFault"]
<obj_SoapClient> = $vars["SoapClient"]
<obj_DOMCharacterData> = $vars["DOMCharacterData"]
<obj_PharFileInfo> = $vars["PharFileInfo"]
<obj_RecursiveIteratorIterator> = $vars["RecursiveIteratorIterator"]
<obj_RecursiveFilterIterator> = $vars["RecursiveFilterIterator"]
<obj_variant> = $vars["variant"]
<obj_mysqli_result> = $vars["mysqli_result"]
<obj_ParentIterator> = $vars["ParentIterator"]
<obj_SNMP> = $vars["SNMP"]
<obj_FilesystemIterator> = $vars["FilesystemIterator"]
<obj_DOMDocument> = $vars["DOMDocument"]
<obj_DOMProcessingInstruction> = $vars["DOMProcessingInstruction"]
<obj_LimitIterator> = $vars["LimitIterator"]
<obj_NoRewindIterator> = $vars["NoRewindIterator"]
<obj_IteratorIterator> = $vars["IteratorIterator"]
<obj_DOMNode> = $vars["DOMNode"]
<obj_DateTime> = $vars["DateTime"]
<obj_SplFixedArray> = $vars["SplFixedArray"]
<obj_SQLite3Stmt> = $vars["SQLite3Stmt"]
<obj_GlobIterator> = $vars["GlobIterator"]
<obj_mysqli_stmt> = $vars["mysqli_stmt"]
<obj_DOMComment> = $vars["DOMComment"]
<obj_DirectoryIterator> = $vars["DirectoryIterator"]
<obj_CachingIterator> = $vars["CachingIterator"]
<obj_RecursiveArrayIterator> = $vars["RecursiveArrayIterator"]
<obj_DatePeriod> = $vars["DatePeriod"]
<obj_PDO_PGSql_Ext> = $vars["PDO_PGSql_Ext"]
<obj_SoapServer> = $vars["SoapServer"]
<obj_RecursiveCachingIterator> = $vars["RecursiveCachingIterator"]
<obj_php_user_filter> = $vars["php_user_filter"]
<obj_HashContext> = $vars["HashContext"]
